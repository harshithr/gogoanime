{"version":3,"sources":["components/FetchDetails/HomePage.js","components/LayoutDesign/SideDrawer.js","components/FetchDetails/SearchAutocomplete.js","values.js","components/LayoutDesign/Head.js","components/LayoutDesign/Pagination/PaginationComponent.js","components/LayoutDesign/Footer.js","components/LayoutDesign/BodyStartPage.js","components/LayoutDesign/NavHead.js","components/FetchDetails/HomePagePagination.js","components/Pages/StartPage.js","components/Pages/MoviesPage.js","components/Pages/NewSeason.js","components/Pages/PopularPage.js","components/FetchDetails/FetchDownloadInfo.js","components/LayoutDesign/DetailsBody.js","components/FetchDetails/FetchDetailsPage.js","components/Pages/DetailsPage.js","components/FetchDetails/Search.js","components/LayoutDesign/Pagination/SearchPageComponent.js","components/LayoutDesign/BodySearchPage.js","components/FetchDetails/SearchPagination.js","components/Pages/SearchPage.js","components/Pages/RecentDUB.js","App.js","serviceWorker.js","index.js"],"names":["FetchHomePage","url","page","loadAnime","Promise","success","failure","fetch","then","html","text","htmlText","path","require","parse","querySelector","childNodes","animeData","entryCount","undefined","remove","i","length","loop","isWhitespace","episodeURLFetch","attributes","href","episodeURL","imgURL","querySelectorAll","src","episodeName","structuredText","publishTime","push","name","img","time","catch","err","console","log","this","useStyles","makeStyles","theme","menuButton","marginRight","spacing","drawerList","width","SideDrawer","classes","useState","state","setState","toggleDrawer","open","event","type","key","Fragment","IconButton","edge","className","color","onClick","SwipeableDrawer","anchor","onClose","onOpen","SearchAutocomplete","keyword","animeName","alt","URL2","popularURL","onGoingSeries","moviesURL","searchURL","recentDUB","grow","flexGrow","title","display","breakpoints","up","inputRoot","inputInput","padding","paddingLeft","transition","transitions","create","sectionDesktop","sectionMobile","root","alignItems","marginLeft","input","flex","iconButton","divider","height","margin","renderAutoComplete","position","zIndex","marginTop","Head","mobileMoreAnchorEl","setMobileMoreAnchorEl","showAutoComplete","setAutoComplete","textInput","setInput","setAnimeData","wrapperRef","useRef","isMobileMenuOpen","Boolean","useEffect","data","document","addEventListener","handleClickOutside","removeEventListener","wrap","current","contains","target","renderMobileMenu","Menu","anchorEl","anchorOrigin","vertical","horizontal","id","keepMounted","transformOrigin","MenuItem","selected","window","location","pathname","startsWith","to","AppBar","Toolbar","Typography","variant","noWrap","FormControl","ref","Paper","component","InputBase","placeholder","value","onChange","style","List","dense","map","index","ListItem","ListItemText","primary","fontSize","aria-label","aria-controls","aria-haspopup","currentTarget","PaginationComponent","props","useParams","pagination","Math","random","pageURL","footer","bottom","backgroundColor","palette","background","paper","textAlign","Footer","sideBanner","epiName","epiTime","card","flexDirection","float","down","cardContent","OGSList","OGSName","BodyStartPage","setAnime","setOnGoing","setPagination","onGoingAnime","Grid","container","item","lg","xl","md","sm","xs","Card","CardMedia","image","CardContent","paginationURL","subheader","StarBorderRounded","ListItemAvatar","Avatar","Divider","renderOnGoingSeries","categories","showLogo","NavHead","HomePagePagination","loadPagination","pageNum","StartPage","handlePage","HomePage","Pagination","MoviesPage","getElementsByTagName","content","NewSeason","PopularPage","Search","iframeData","replace","responsive","overflow","paddingBottom","iframe","border","nameContainer","summaryContainer","borderColor","buttonText","buttonContainer","button","singleButton","navContainer","navItemPrevious","navItemDownload","navItemNext","DetailsBody","recentAnime","setRecent","downloadURL","setDownloadURL","recentRelease","FetchDownloadInfo","video","handleButtonHighlight","num","episodeNumber","Container","videoDetailName","videoIframe","allowFullScreen","scrolling","currentIndex","previousText","Button","size","nextText","videoSummary","renderDetails","NewReleases","FetchDetailsPage","fetchRoot","rawText","fetchVideoDetails","fetchEpisodes","animeDetailsData","class","episodeURLs","DetailsPage","imageURL","episodeTime","episodeImage","SearchPageComponent","BodySearchPage","SearchPagination","RecentDUB","App","exact","render","SearchPage","hostname","match","createMuiTheme","MuiButtonBase","disableRipple","StrictMode","ThemeProvider","CssBaseline","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.8bd1bf00.chunk.js","sourcesContent":["export default class FetchHomePage {\r\n\r\n  constructor(url, page) {\r\n    this.url = url;\r\n    this.page = page;\r\n  }\r\n\r\n  loadAnime = () => {\r\n    return new Promise((success, failure) => {\r\n      fetch(`${this.url}?page=${this.page}`)\r\n        .then(html => html.text())\r\n        .then(htmlText => {\r\n          const HTMLParser = require('fast-html-parser');\r\n          \r\n          let root = HTMLParser.parse(htmlText);\r\n          \r\n          let recentAddedSUB = root.querySelector('.wpb_wrapper');\r\n\r\n          let path = recentAddedSUB.childNodes[1].childNodes[2].childNodes;\r\n          //console.log(path);\r\n\r\n          const animeData = [];\r\n\r\n          let entryCount = 0;\r\n\r\n          // checks whether path[61] from path array is undefined, if removed it results in error\r\n          if(path[61].childNodes[1] === undefined) {\r\n            path.remove(path[61]);\r\n          }\r\n\r\n          for (let i=0; i<path.length; i++) {\r\n            const loop = path[i];\r\n            if (loop.isWhitespace === true) continue;\r\n            entryCount++;\r\n\r\n            // episode url\r\n            let episodeURLFetch = loop.childNodes[1].attributes.href;\r\n            let episodeURL = `${episodeURLFetch}`;\r\n            //console.log(episodeURL);\r\n\r\n            // episode image\r\n            let imgURLFetch = loop.querySelectorAll('.img');\r\n            let imgURL = imgURLFetch[0].childNodes[1].childNodes[1].attributes.src;\r\n            //console.log(imgURL);\r\n\r\n            let nameFetch = loop.querySelector('.name');\r\n            let episodeName = nameFetch.structuredText;\r\n            //console.log(episodeName);\r\n\r\n            let time = loop.querySelector('.meta');\r\n            let publishTime = time.structuredText;\r\n            //console.log(time);\r\n\r\n            animeData.push({\r\n              name: episodeName,\r\n              img: imgURL,\r\n              url: episodeURL,\r\n              time: publishTime\r\n            });\r\n          }\r\n          success([ animeData, entryCount ]);\r\n          \r\n        })\r\n        .catch(err => {\r\n          console.log(err);\r\n          failure(err);\r\n        });\r\n\r\n    });\r\n  }\r\n} ","import React, { useState } from 'react';\r\nimport { IconButton, SwipeableDrawer } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Menu as MenuIcon } from '@material-ui/icons';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  drawerList: {\r\n    width: 250\r\n  }\r\n}));\r\n\r\nconst SideDrawer = () => {\r\n  const classes = useStyles();\r\n\r\n  const [ state, setState ] = useState(false);\r\n\r\n  const toggleDrawer = ( open ) => (event) => {\r\n    if (event && event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\r\n      return;\r\n    }\r\n\r\n    setState(open);\r\n  }\r\n\r\n  return (\r\n    <React.Fragment key=\"left\">\r\n      <IconButton\r\n        edge=\"start\"\r\n        className={classes.menuButton}\r\n        color=\"inherit\"\r\n        onClick={toggleDrawer(true)}\r\n      >\r\n        <MenuIcon />\r\n      </IconButton>\r\n      <SwipeableDrawer\r\n        anchor=\"left\"\r\n        open={state}\r\n        onClose={toggleDrawer(false)}\r\n        onOpen={toggleDrawer(true)}\r\n      >\r\n        <div className={classes.drawerList}>\r\n          <p>Hey there</p>\r\n        </div>\r\n      </SwipeableDrawer>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default SideDrawer;","export default class SearchAutocomplete {\r\n  constructor(url, keyword, page) {\r\n    this.url = url;\r\n    this.page = page;\r\n    this.keyword = keyword;\r\n  }\r\n\r\n  loadAnime() {\r\n    return new Promise((success, failure) => {\r\n      //console.log(`${this.url}keyword=${this.keyword}&page=${this.page}`);\r\n      fetch(`${this.url}keyword=${this.keyword}`)\r\n        .then((html) => html.text())\r\n        .then((htmlText) => {\r\n\r\n          let fetch = require('fast-html-parser');\r\n          \r\n          let root = fetch.parse(htmlText);\r\n\r\n          let wrapper = root.querySelector('.wpb_wrapper');\r\n\r\n          let path = wrapper.childNodes[1].childNodes[2].childNodes;\r\n          //console.log(path); \r\n\r\n          let animeData = [];\r\n\r\n          for (let i=0; i<path.length; i++) {\r\n\r\n            if (path[i].isWhitespace === true) continue;\r\n            \r\n            // Check childnodes[] are not undefined, if undefined continue \r\n            if( path[i].childNodes[1] === undefined ) continue; \r\n\r\n            let episodeURL = path[i].childNodes[1].attributes.href;\r\n\r\n            let animeName = path[i].childNodes[1].childNodes[1].childNodes[1].childNodes[1].attributes.alt;\r\n\r\n            animeData.push({\r\n              animeName: animeName,\r\n              episodeURL: episodeURL\r\n            });\r\n          }\r\n          //console.log(animeData);\r\n          success(animeData);\r\n        });\r\n    });\r\n  }\r\n}","export const URL = 'https://gogo-stream.com';\r\nexport const URL2 = 'https://gogo-stream.com/';\r\nexport const popularURL = 'https://gogo-stream.com/popular';\r\nexport const onGoingSeries = 'https://gogo-stream.com/ongoing-series';\r\nexport const moviesURL = 'https://gogo-stream.com/movies';\r\nexport const newSeasonURL = 'https://gogo-stream.com/new-season';\r\nexport const searchURL = 'https://gogo-stream.com/search.html?'; \r\nexport const recentDUB = 'https://gogo-stream.com/recently-added-dub';\r\nexport const downloadLink='https://gogo-stream.com/download';\r\n//const darkColorUsed = '#303030';","import React, { useState, useRef, useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport { \r\n  AppBar, \r\n  Toolbar, \r\n  Typography, \r\n  IconButton, \r\n  Menu, \r\n  MenuItem,\r\n  FormControl,\r\n  Paper,\r\n  InputBase,\r\n  List,\r\n  ListItem,\r\n  ListItemText\r\n} from '@material-ui/core';\r\nimport { Search as SearchIcon, MoreVert as MoreIcon } from '@material-ui/icons';\r\nimport { Link } from 'react-router-dom';\r\nimport SideDrawer from './SideDrawer.js';\r\nimport SearchAutocomplete from '../FetchDetails/SearchAutocomplete.js';\r\nimport { searchURL } from '../../values.js';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  grow: {\r\n    flexGrow: 1,\r\n  },\r\n  title: {\r\n    display: 'none',\r\n    [theme.breakpoints.up('sm')]: {\r\n      display: 'block',\r\n    },\r\n  },\r\n  inputRoot: {\r\n    color: 'inherit',\r\n  },\r\n  inputInput: {\r\n    padding: theme.spacing(1, 1, 1, 0),\r\n    // vertical padding + font size from searchIcon\r\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n    transition: theme.transitions.create('width'),\r\n    width: '100%',\r\n    [theme.breakpoints.up('md')]: {\r\n      width: '20ch',\r\n    },\r\n  },\r\n  sectionDesktop: {\r\n    display: 'none',\r\n    [theme.breakpoints.up('md')]: {\r\n      display: 'flex',\r\n    },\r\n  },\r\n  sectionMobile: {\r\n    display: 'flex',\r\n    [theme.breakpoints.up('md')]: {\r\n      display: 'none',\r\n    },\r\n  },\r\n  root: {\r\n    padding: '2px 4px',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    width: \"auto\",\r\n    marginLeft: theme.spacing(1)\r\n  },\r\n  input: {\r\n    marginLeft: theme.spacing(1),\r\n    flex: 1,\r\n  },\r\n  iconButton: {\r\n    padding: 10,\r\n  },\r\n  divider: {\r\n    height: 28,\r\n    margin: 4,\r\n  },\r\n  renderAutoComplete: {\r\n    position: 'absolute', \r\n    zIndex: 99, \r\n    width: 'auto',\r\n    marginTop: 50, \r\n    marginLeft: theme.spacing(1),\r\n  }\r\n}));\r\n\r\nconst Head = () => {\r\n  const classes = useStyles();\r\n  const [mobileMoreAnchorEl, setMobileMoreAnchorEl] = useState(null);\r\n  const [ showAutoComplete, setAutoComplete ] = useState(false);\r\n  const [ textInput, setInput ] = useState('');\r\n  const [ animeData, setAnimeData ] = useState([]);\r\n  const wrapperRef = useRef(null);\r\n\r\n  const isMobileMenuOpen = Boolean(mobileMoreAnchorEl);\r\n\r\n  const handleMobileMenuClose = () => {\r\n    setMobileMoreAnchorEl(null);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const search = new SearchAutocomplete(searchURL, textInput, \"1\");\r\n    search.loadAnime().then(data => setAnimeData(data));\r\n  }, [textInput]);\r\n\r\n  //console.log(animeData);\r\n\r\n  useEffect(() => {\r\n    document.addEventListener('mousedown', handleClickOutside);\r\n\r\n    return () => {\r\n      document.removeEventListener('mousedown', handleClickOutside);\r\n    }\r\n  }, []);\r\n\r\n  const handleClickOutside = event => {\r\n    const {current: wrap} = wrapperRef;\r\n    if (wrap && !wrap.contains(event.target)) {\r\n      setAutoComplete(false);\r\n    }\r\n  }\r\n\r\n  const handleMobileMenuOpen = (event) => {\r\n    setMobileMoreAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const mobileMenuId = 'primary-search-account-menu-mobile';\r\n  const renderMobileMenu = (\r\n    <Menu\r\n      anchorEl={mobileMoreAnchorEl}\r\n      anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n      id={mobileMenuId}\r\n      keepMounted\r\n      transformOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n      open={isMobileMenuOpen}\r\n      onClose={handleMobileMenuClose}\r\n    >\r\n      <MenuItem selected={(window.location.pathname === \"/\" | window.location.pathname.startsWith('/page')) ? true : false}>\r\n        <Link to=\"/\">\r\n          <p>SUB Animes</p>\r\n        </Link>\r\n      </MenuItem>\r\n      <MenuItem selected={(window.location.pathname === \"/recent-dub\") ? true : false} >\r\n        <Link to=\"/recent-dub\">\r\n        <p>DUB Animes</p>\r\n        </Link>\r\n      </MenuItem>\r\n      \r\n    </Menu>\r\n  );\r\n\r\n  const renderAutoComplete = (data) => {\r\n    if (showAutoComplete === true && data !== undefined) {\r\n      return (\r\n        <div style={{ display: 'block' }} className={classes.renderAutoComplete}>\r\n          <Paper>\r\n          <List component=\"nav\" dense={true}>\r\n            {data.map((value, index) => {\r\n              if (index < 10) {\r\n                return (\r\n                  <Link to={`${value.episodeURL}`}>\r\n                    <ListItem>\r\n                      <ListItemText primary={value.animeName} />\r\n                    </ListItem>\r\n                  </Link>\r\n                );\r\n              }\r\n            })}\r\n          </List>\r\n          </Paper>\r\n        </div>\r\n      );\r\n    } else {\r\n      return (\r\n        <div></div>\r\n      )\r\n    }\r\n  }\r\n  return (\r\n    <div className={classes.grow} >\r\n      <AppBar position=\"static\" color=\"transparent\">\r\n        <Toolbar>\r\n          <SideDrawer />\r\n          <Typography className={classes.title} variant=\"h5\" noWrap>\r\n            <Link to=\"/\">\r\n              Gogoanime\r\n            </Link>\r\n          </Typography>\r\n          <FormControl ref={wrapperRef} >\r\n            <Paper component=\"form\" className={classes.root} >\r\n              <InputBase\r\n                className={classes.input}\r\n                placeholder=\"Search\"\r\n                color=\"secondary\"\r\n                value={textInput}\r\n                onChange={(event) => { setInput(event.target.value) }}\r\n                onClick={() => setAutoComplete(true)}\r\n              />\r\n              <Link to={`/search/keyword=${textInput}/page=1`}>\r\n              <IconButton type=\"submit\" className={classes.iconButton} >\r\n                <SearchIcon  />\r\n              </IconButton>\r\n              </Link>\r\n            </Paper>\r\n            {renderAutoComplete(animeData)}\r\n          </FormControl>\r\n          <div className={classes.grow} />\r\n          <div className={classes.sectionDesktop}>\r\n            <IconButton >\r\n              <Link to=\"/\">\r\n                <span style={{ fontSize: '18px', color: (window.location.pathname === '/' | window.location.pathname.startsWith(\"/page\")) ? \"#f44336\" : \"white\" }}>\r\n                  SUB\r\n                </span>\r\n              </Link>\r\n            </IconButton>\r\n            <IconButton >\r\n              <Link to=\"/recent-dub\">\r\n                <span \r\n                  style={{ fontSize: '18px', color: (window.location.pathname.startsWith('/recent-dub')) ? \"#f44336\" : \"white\" }}>\r\n                  DUB\r\n                </span>\r\n              </Link>\r\n            </IconButton>\r\n            \r\n          </div>\r\n          <div className={classes.sectionMobile}>\r\n            <IconButton\r\n              aria-label=\"show more\"\r\n              aria-controls={mobileMenuId}\r\n              aria-haspopup=\"true\"\r\n              onClick={handleMobileMenuOpen}\r\n              color=\"inherit\"\r\n            >\r\n              <MoreIcon />\r\n            </IconButton>\r\n          </div>\r\n        </Toolbar>\r\n      </AppBar>\r\n      {renderMobileMenu}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Head;","import React from 'react';\r\nimport { Link, useParams } from 'react-router-dom';\r\nimport './PaginationComponent.css';\r\n\r\nconst PaginationComponent = (props) => {\r\n\r\n  const location = useParams();\r\n  //console.log(location);\r\n  const renderPage = (data) => {\r\n    if (data.length !== null) {\r\n      return (\r\n        data.map((value, index) => (\r\n          <Link key={Math.random()} to={`${props.pageURL}=${value}`} className={(location.page === value) ? 'active' : null} >{value}</Link>\r\n        ))\r\n      )\r\n    } else {\r\n      return console.log('data did not render');\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"pagination\">\r\n        <a>&laquo;</a>\r\n        {renderPage(props.pagination)}\r\n        <a>&raquo;</a>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PaginationComponent;","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  footer: {\r\n    position: \"relative\",\r\n    bottom: 0,\r\n    width: '100%',\r\n    height: 20,\r\n    backgroundColor: theme.palette.background.paper,\r\n    textAlign: 'center',\r\n    flexGrow: 1\r\n  }\r\n}));\r\n\r\nconst Footer = () => {\r\n  const classes = useStyles();\r\n  return (\r\n    <div className={classes.footer}>\r\n      Gogoanime © Copyright 2020, All Rights Reserved\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Footer;","import React, { useState, useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { \r\n  Card, \r\n  CardMedia, \r\n  CardContent, \r\n  Grid, \r\n  List, \r\n  ListItem, \r\n  ListItemText, \r\n  Divider, \r\n  ListItemAvatar,\r\n  Avatar,\r\n} from '@material-ui/core';\r\nimport { Link } from 'react-router-dom';\r\nimport { StarBorderRounded } from '@material-ui/icons';\r\nimport PaginationComponent from './Pagination/PaginationComponent.js';\r\n\r\nimport Footer from './Footer.js';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  sideBanner: {\r\n    display: 'none',\r\n    [theme.breakpoints.up('md')]: {\r\n      display: 'block'\r\n    },\r\n  },\r\n  epiName: {\r\n    fontSize: '12px',\r\n  },\r\n  epiTime: {\r\n    fontSize: '10px',\r\n  },\r\n  card: {\r\n    flexDirection: 'row',\r\n    float: 'left',\r\n    width: '25%',\r\n    padding: 5,\r\n    height: 280,\r\n    backgroundColor: 'transparent',\r\n    [theme.breakpoints.down('xs')]: {\r\n      width: '50%',\r\n      padding: 5\r\n    }\r\n  },\r\n  cardContent: {\r\n    padding: 0, \r\n    textAlign: 'center'\r\n  },\r\n  OGSList: {\r\n    width: '100%',\r\n    padding: 5,\r\n    marginTop: 5,\r\n    marginLeft: 5,\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n  OGSName: {\r\n    fontSize: '12px'\r\n  },\r\n}));\r\n\r\nconst BodyStartPage = (props) => {\r\n  const classes = useStyles();\r\n  const [animeData, setAnime] = useState([]);\r\n  const [onGoingSeries, setOnGoing] = useState([]);\r\n  const [pagination, setPagination] = useState([]);\r\n\r\n  useEffect(() => {\r\n    setAnime(props.data);\r\n  }, [props.data]);\r\n\r\n  useEffect(() => {\r\n    setOnGoing(props.onGoingAnime);\r\n  }, [props.onGoingAnime]);\r\n\r\n  useEffect(() => {\r\n    setPagination(props.pagination);\r\n  }, [props.pagination]);\r\n\r\n  //console.log(pagination);\r\n\r\n\r\n\r\n  // useEffect(() => {\r\n  //   if (animeData !== undefined) {\r\n  //     animeData.map((data) => console.log(data));\r\n  //   }\r\n  // });\r\n\r\n  const renderItems = (data) => {\r\n    if (animeData !== undefined) {\r\n      return (\r\n        data.map((data) => (\r\n          <Link to={`${data.url}`}>\r\n          <Card className={classes.card}>\r\n            <CardMedia \r\n              component=\"img\"\r\n              height=\"180\"\r\n              image={data.img}\r\n            />\r\n            <CardContent className={classes.cardContent}>\r\n              <p className={classes.epiName}>{data.name}</p>\r\n              <span className={classes.epiTime}>{data.time}</span>\r\n            </CardContent>\r\n          </Card>\r\n          </Link>\r\n        ))\r\n      );\r\n    } else {\r\n      return console.log('Data did not render');\r\n    }\r\n  }\r\n\r\n  const renderOnGoingSeries = (data) => {\r\n    if ( onGoingSeries !== undefined) {\r\n      return (\r\n        <List \r\n          className={classes.OGSList} \r\n          dense={true}\r\n          subheader={<p><StarBorderRounded /> Popular On-Going Series</p>}\r\n        >\r\n          { data.map((data, index) => {\r\n            if (index < 15) {\r\n            return (\r\n            <div>\r\n              <Link to={`${data.url}`}>\r\n                <ListItem>\r\n                  <ListItemAvatar>\r\n                    <Avatar variant=\"rounded\" alt={data.name} src={data.img} />\r\n                  </ListItemAvatar>\r\n                  <ListItemText \r\n                    primary={<p className={classes.OGSName}>{data.name}</p>}\r\n                  />\r\n                </ListItem>\r\n              </Link>\r\n              <Divider variant=\"fullWidth\" />\r\n            </div>\r\n            )\r\n            } \r\n        })}\r\n        </List>\r\n      );\r\n    } else {\r\n      return console.log('Data did not render');\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Grid container={true}>\r\n        {/* Put ads to the below empty grid */}\r\n        <Grid item className={classes.sideBanner} lg={2} xl={2} md={1} >\r\n          <div ></div>\r\n        </Grid>\r\n        <Grid item lg={6} md={8} sm={12} xs={12} xl={6}>\r\n          <div style={{ width: '100%'}}>\r\n            {renderItems(animeData)}\r\n          </div>\r\n          <div style={{ flexDirection: 'column', float: \"right\" }}>\r\n            <PaginationComponent pagination={pagination} pageURL={props.paginationURL} />\r\n          </div>\r\n        </Grid>\r\n        <Grid item lg={2} md={2} sm={12} xs={12} xl={2}>\r\n          <div style={{ width: \"100%\" }}>\r\n            {renderOnGoingSeries(onGoingSeries)}\r\n          </div>\r\n        </Grid>\r\n        {/* Put ads to the below empty grid */}\r\n        <Grid item className={classes.sideBanner} lg={2} xl={2} md={1}>\r\n          <div></div>\r\n        </Grid>\r\n      </Grid>\r\n      \r\n      <Footer />\r\n    </div>\r\n  );  \r\n}\r\n\r\nexport default BodyStartPage;","import React, { useState } from 'react';\r\nimport { AppBar, Toolbar, Typography, IconButton, Menu, MenuItem } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { MoreVert as MoreIcon } from '@material-ui/icons';\r\nimport { Link } from 'react-router-dom';\r\nimport './NavHead.css';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1\r\n  },\r\n  categories: {\r\n    flexGrow: 1\r\n  },\r\n  showLogo: {\r\n    display: 'none',\r\n    [theme.breakpoints.down('sm')]: {\r\n      display: 'flex'\r\n    },\r\n    flexGrow: 1\r\n  },\r\n  sectionDesktop: {\r\n    display: 'none',\r\n    [theme.breakpoints.up('sm')]: {\r\n      display: 'flex',\r\n    },\r\n    flexGrow: 1\r\n  },\r\n  sectionMobile: {\r\n    display: 'flex',\r\n    [theme.breakpoints.up('sm')]: {\r\n      display: 'none',\r\n    },\r\n  },\r\n}));\r\n\r\nconst NavHead = () => {\r\n  const classes = useStyles();\r\n\r\n  const [mobileMoreAnchorEl, setMobileMoreAnchorEl] = useState(null);\r\n\r\n  const isMobileMenuOpen = Boolean(mobileMoreAnchorEl);\r\n  \r\n  // useEffect(() => {\r\n\r\n  // }, [window.location.pathname]);\r\n\r\n  const handleMobileMenuClose = () => {\r\n    setMobileMoreAnchorEl(null);\r\n  };\r\n\r\n  const handleMobileMenuOpen = (event) => {\r\n    setMobileMoreAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const mobileMenuId = 'mobile-view';\r\n  const renderMobileMenu = (\r\n    <Menu\r\n      anchorEl={mobileMoreAnchorEl}\r\n      anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n      id={mobileMenuId}\r\n      keepMounted\r\n      transformOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n      open={isMobileMenuOpen}\r\n      onClose={handleMobileMenuClose}\r\n    >\r\n      <MenuItem selected={(window.location.pathname === \"/\" | window.location.pathname.startsWith('/page')) ? true : false}>\r\n        <Link to=\"/\">\r\n          <p>Recent Release</p>\r\n        </Link>\r\n      </MenuItem>\r\n      <MenuItem selected={(window.location.pathname === \"/movies\") ? true : false}>\r\n        <Link to=\"/movies\">\r\n          <p>Movies</p>\r\n        </Link>\r\n      </MenuItem>\r\n      <MenuItem selected={(window.location.pathname === \"/new-season\") ? true : false}>\r\n        <Link to=\"/new-season\">\r\n          <p>New Season</p>\r\n        </Link>\r\n      </MenuItem>\r\n      <MenuItem selected={(window.location.pathname === \"/popular\") ? true : false}>\r\n        <Link to=\"/popular\">\r\n          <p>Popular Anime</p>\r\n        </Link>\r\n      </MenuItem>\r\n    </Menu>\r\n  );\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\" color=\"inherit\">\r\n        <Toolbar>\r\n          <Typography className={classes.showLogo}>\r\n            Gogoanime\r\n          </Typography>\r\n          <div className={classes.sectionDesktop}>\r\n            <Typography className={classes.categories}>\r\n              <Link to=\"/\" >\r\n                <span style={{ color: (window.location.pathname === \"/\" | window.location.pathname.startsWith('/page')) ? \"#f44336\" : \"white\" }}>\r\n                  Recent Release\r\n                </span>\r\n              </Link>\r\n            </Typography>\r\n            <Typography className={classes.categories}  >\r\n              <Link to=\"/movies\" >\r\n                <span style={{ color: window.location.pathname.startsWith('/movies') ? \"#f44336\" : \"white\" }}>\r\n                  Movies\r\n                </span>\r\n              </Link>\r\n            </Typography>\r\n            <Typography className={classes.categories}  >\r\n              <Link to=\"/new-season\" >\r\n                <span style={{ color: window.location.pathname.startsWith('/new-season') ? \"#f44336\" : \"white\" }}>\r\n                  New Season\r\n                </span>\r\n              </Link>\r\n            </Typography>\r\n            <Typography className={classes.categories}  >\r\n              <Link to=\"/popular\" >\r\n                <span style={{ color: window.location.pathname.startsWith('/popular') ? \"#f44336\" : \"white\" }}>\r\n                  Popular Anime\r\n                </span>\r\n              </Link>\r\n            </Typography>\r\n          </div>\r\n          <div className={classes.sectionMobile}>\r\n            <IconButton\r\n              aria-label=\"show more\"\r\n              aria-controls={mobileMenuId}\r\n              aria-haspopup=\"true\"\r\n              onClick={handleMobileMenuOpen}\r\n              color=\"inherit\"\r\n            >\r\n              <MoreIcon />\r\n            </IconButton>\r\n          </div>\r\n        </Toolbar>\r\n      </AppBar>\r\n      {renderMobileMenu}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NavHead;","class HomePagePagination {\r\n  constructor (url, page) {\r\n    this.url = url;\r\n    this.page = page;\r\n  }\r\n\r\n  loadPagination = () => {\r\n    return new Promise((success, failure) => {\r\n      //console.log(`${this.url}?page=${this.page}`);\r\n      fetch(`${this.url}?page=${this.page}`)\r\n        .then(html => html.text())\r\n        .then(htmlText => {\r\n          const HTMLParser = require('fast-html-parser');\r\n          \r\n          let root = HTMLParser.parse(htmlText);\r\n\r\n          let pagination = root.querySelector('.pagination');\r\n\r\n          let page = pagination.childNodes[1].childNodes[1];\r\n          \r\n          let pageNum = [];\r\n          for (let i=0; i<page.childNodes.length - 1 ; i++) {\r\n            pageNum.push(page.childNodes[i].structuredText);\r\n          }\r\n\r\n          //console.log(pageNum );\r\n\r\n          success(pageNum);\r\n        });\r\n    });\r\n  }\r\n}\r\n\r\nexport default HomePagePagination;","import React, { useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport HomePage from '../FetchDetails/HomePage.js';\r\nimport Head from '../LayoutDesign/Head.js';\r\nimport Body from '../LayoutDesign/BodyStartPage.js';\r\nimport NavHead from '../LayoutDesign/NavHead.js';\r\nimport { onGoingSeries, URL2 } from '../../values.js';\r\nimport Pagination from '../FetchDetails/HomePagePagination.js';\r\n\r\nconst StartPage = () => {\r\n\r\n  let [ animeData, setAnimeData ] = useState([]);\r\n  let [ onGoingAnime, setOnGoing ] = useState([]);\r\n  let [ pagination, setPagination ] = useState([]);\r\n\r\n  let { page } = useParams();\r\n  //console.log(page);\r\n\r\n  const handlePage = () => {\r\n    return (page === undefined | page === null ) ? 1 : page;\r\n  }\r\n\r\n  useEffect(() => {\r\n    const anime = new HomePage(URL2, handlePage());\r\n    anime.loadAnime().then(data => setAnimeData(animeData = data));\r\n  }, [animeData.length]);\r\n\r\n  useEffect(() => {\r\n    const anime = new HomePage(onGoingSeries, 1);\r\n    anime.loadAnime().then(data => setOnGoing(data));\r\n  }, [onGoingAnime.length]);\r\n\r\n  useEffect(() => {\r\n    const pagination = new Pagination(URL2, handlePage());\r\n    pagination.loadPagination().then(data => {\r\n      setPagination(data);\r\n    });\r\n  }, [pagination.length]);\r\n\r\n  //console.log(animeData[0]);\r\n  //console.log(pagination);\r\n\r\n  return (\r\n    <div>\r\n      <Head />\r\n      <NavHead />\r\n      <Body data={animeData[0]} onGoingAnime={onGoingAnime[0]} pagination={pagination} paginationURL={'/page'} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default StartPage;","import React, { useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport HomePage from '../FetchDetails/HomePage.js';\r\nimport Head from '../LayoutDesign/Head.js';\r\nimport Body from '../LayoutDesign/BodyStartPage.js';\r\nimport NavHead from '../LayoutDesign/NavHead.js';\r\nimport { onGoingSeries, moviesURL } from '../../values.js';\r\nimport Pagination from '../FetchDetails/HomePagePagination.js';\r\n\r\nconst MoviesPage = () => {\r\n\r\n  let [ animeData, setAnimeData ] = useState([]);\r\n  let [ onGoingAnime, setOnGoing ] = useState([]);\r\n  let [ pagination, setPagination ] = useState([]);\r\n\r\n  let { page } = useParams();\r\n  //console.log(page);\r\n\r\n  const handlePage = () => {\r\n    return (page === undefined | page === null ) ? 1 : page;\r\n  }\r\n\r\n  useEffect(() => {\r\n    document.title = 'Gogoanime | Watch anime movies in HD - both SUB and DUB';\r\n    document.getElementsByTagName(\"meta\")[3].content = 'Gogoanime, watch anime movies in HD, movies are updated frequently';\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const anime = new HomePage(moviesURL, handlePage());\r\n    anime.loadAnime().then(data => setAnimeData(animeData = data));\r\n  }, [animeData.length]);\r\n\r\n  useEffect(() => {\r\n    const anime = new HomePage(onGoingSeries, 1);\r\n    anime.loadAnime().then(data => setOnGoing(data));\r\n  }, [onGoingAnime.length]);\r\n\r\n  useEffect(() => {\r\n    const pagination = new Pagination(moviesURL, handlePage());\r\n    pagination.loadPagination().then(data => {\r\n      setPagination(data);\r\n    });\r\n  }, [pagination.length]);\r\n\r\n  //console.log(animeData[0]);\r\n  //console.log(pagination);\r\n\r\n  return (\r\n    <div>\r\n      <Head />\r\n      <NavHead />\r\n      <Body data={animeData[0]} onGoingAnime={onGoingAnime[0]} pagination={pagination} paginationURL={'/movies/page'} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MoviesPage;","import React, { useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport HomePage from '../FetchDetails/HomePage.js';\r\nimport Head from '../LayoutDesign/Head.js';\r\nimport Body from '../LayoutDesign/BodyStartPage.js';\r\nimport NavHead from '../LayoutDesign/NavHead.js';\r\nimport { onGoingSeries, newSeasonURL } from '../../values.js';\r\nimport Pagination from '../FetchDetails/HomePagePagination.js';\r\n\r\nconst NewSeason = () => {\r\n\r\n  let [ animeData, setAnimeData ] = useState([]);\r\n  let [ onGoingAnime, setOnGoing ] = useState([]);\r\n  let [ pagination, setPagination ] = useState([]);\r\n\r\n  let { page } = useParams();\r\n  //console.log(page);\r\n\r\n  const handlePage = () => {\r\n    return (page === undefined | page === null ) ? 1 : page;\r\n  }\r\n\r\n  useEffect(() => {\r\n    document.title = 'Gogoanime | Watch New Season of animes in HD - both SUB and DUB';\r\n    document.getElementsByTagName(\"meta\")[3].content = 'Gogoanime, watch anime new seasons in HD, episodes are updated frequently';\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const anime = new HomePage(newSeasonURL, handlePage());\r\n    anime.loadAnime().then(data => setAnimeData(animeData = data));\r\n  }, [animeData.length]);\r\n\r\n  useEffect(() => {\r\n    const anime = new HomePage(onGoingSeries, 1);\r\n    anime.loadAnime().then(data => setOnGoing(data));\r\n  }, [onGoingAnime.length]);\r\n\r\n  useEffect(() => {\r\n    const pagination = new Pagination(newSeasonURL, handlePage());\r\n    pagination.loadPagination().then(data => {\r\n      setPagination(data);\r\n    });\r\n  }, [pagination.length]);\r\n\r\n  //console.log(animeData[0]);\r\n  //console.log(pagination);\r\n\r\n  return (\r\n    <div>\r\n      <Head />\r\n      <NavHead />\r\n      <Body data={animeData[0]} onGoingAnime={onGoingAnime[0]} pagination={pagination} paginationURL={'/new-season/page'} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NewSeason;","import React, { useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport HomePage from '../FetchDetails/HomePage.js';\r\nimport Head from '../LayoutDesign/Head.js';\r\nimport Body from '../LayoutDesign/BodyStartPage.js';\r\nimport NavHead from '../LayoutDesign/NavHead.js';\r\nimport { onGoingSeries, popularURL } from '../../values.js';\r\nimport Pagination from '../FetchDetails/HomePagePagination.js';\r\n\r\nconst PopularPage = () => {\r\n\r\n  let [ animeData, setAnimeData ] = useState([]);\r\n  let [ onGoingAnime, setOnGoing ] = useState([]);\r\n  let [ pagination, setPagination ] = useState([]);\r\n\r\n  let { page } = useParams();\r\n  //console.log(page);\r\n\r\n  const handlePage = () => {\r\n    return (page === undefined | page === null ) ? 1 : page;\r\n  }\r\n\r\n  useEffect(() => {\r\n    document.title = 'Gogoanime | Watch Popular Animes in HD - both SUB and DUB';\r\n    document.getElementsByTagName(\"meta\")[3].content = 'Gogoanime, watch popular animes in HD, animes are updated frequently';\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const anime = new HomePage(popularURL, handlePage());\r\n    anime.loadAnime().then(data => setAnimeData(animeData = data));\r\n  }, [animeData.length]);\r\n\r\n  useEffect(() => {\r\n    const anime = new HomePage(onGoingSeries, 1);\r\n    anime.loadAnime().then(data => setOnGoing(data));\r\n  }, [onGoingAnime.length]);\r\n\r\n  useEffect(() => {\r\n    const pagination = new Pagination(popularURL, handlePage());\r\n    pagination.loadPagination().then(data => {\r\n      setPagination(data);\r\n    });\r\n  }, [pagination.length]);\r\n\r\n  //console.log(animeData[0]);\r\n  //console.log(pagination);\r\n\r\n  return (\r\n    <div>\r\n      <Head />\r\n      <NavHead />\r\n      <Body data={animeData[0]} onGoingAnime={onGoingAnime[0]} pagination={pagination} paginationURL={'/popular/page'} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PopularPage;","import { downloadLink } from '../../values.js';\r\nexport default class Search {\r\n  constructor(url) {\r\n    this.url = url;\r\n  }\r\n\r\n  loadAnime() {\r\n    return new Promise((success, failure) => {\r\n      fetch(`${this.url}`)\r\n        .then((html) => html.text())\r\n        .then((htmlText) => {\r\n\r\n          let fetch = require('fast-html-parser');\r\n          \r\n          let root = fetch.parse(htmlText);\r\n\r\n          let iframe = root.querySelector('.play-video');\r\n\r\n          let fetchedIframe = iframe.childNodes[1].attributes.src;\r\n\r\n          let iframeData = fetchedIframe.replace(\"//gogo-stream.com/streaming.php\", `${downloadLink}`);\r\n\r\n          success(iframeData);\r\n        });\r\n    });\r\n  }\r\n}","import React, { useEffect, useState, } from 'react';\r\nimport { Grid, Container, List, ListItem, Button, ListItemAvatar, ListItemText, Divider, Avatar } from '@material-ui/core';\r\nimport { NewReleases } from '@material-ui/icons';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Link, useParams } from 'react-router-dom';\r\nimport FetchDownloadInfo from '../FetchDetails/FetchDownloadInfo.js';\r\nimport { URL2 } from '../../values.js';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  sideBanner: {\r\n    display: 'none',\r\n    [theme.breakpoints.up('md')]: {\r\n      display: 'block'\r\n    },\r\n  },\r\n  responsive: {\r\n    width: '100%',\r\n    height: 0,\r\n    overflow: 'hidden',\r\n    paddingBottom: '57%',\r\n    position: 'relative',\r\n    [theme.breakpoints.down('xs')]: {\r\n      width: '100%',\r\n      height: 0,\r\n      paddingBottom: '80%',\r\n      position: 'relative',\r\n    }\r\n  },\r\n  iframe: {\r\n    position: 'absolute',\r\n    border: 0,\r\n    width: '100%',\r\n    height: '100%',\r\n  },\r\n  nameContainer: {\r\n    padding: '5px'\r\n  },\r\n  summaryContainer: {\r\n    padding: '5px',\r\n    border: '1px solid',\r\n    borderColor: 'grey'\r\n  },\r\n  buttonText: {\r\n    color: 'green'\r\n  },\r\n  buttonContainer: {\r\n    float: 'left',\r\n    flexDirection: 'row',\r\n  },\r\n  button: {\r\n    padding: 5,\r\n\r\n  },\r\n  singleButton: {\r\n    marginTop: 3,\r\n  },\r\n  OGSList: {\r\n    width: '100%',\r\n    padding: 5,\r\n    marginTop: 5,\r\n    marginLeft: 5,\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n  OGSName: {\r\n    fontSize: '12px'\r\n  },\r\n  navContainer: {\r\n    width: '100%',\r\n  },\r\n  navItemPrevious: {\r\n    display: 'inline-block',\r\n    width: '33.33%',\r\n  },\r\n  navItemDownload: {\r\n    display: 'inline-block',\r\n    width: '33.33%',\r\n    textAlign: 'center'\r\n  },\r\n  navItemNext: {\r\n    display: 'inline-block',\r\n    width: '33.33%',\r\n    textAlign: 'right'\r\n  }\r\n}));\r\n\r\nconst DetailsBody = (props) => {\r\n  const classes = useStyles();\r\n  \r\n  const [animeData, setAnime] = useState([]);\r\n  const [recentAnime, setRecent] = useState([]);\r\n  const [ downloadURL, setDownloadURL ] = useState('');\r\n\r\n  const location = useParams();\r\n  //console.log(location.video);\r\n\r\n  useEffect(() => {\r\n    setAnime(props.animeData[0]);\r\n  }, [props.animeData[0]]);\r\n\r\n  useEffect(() => {\r\n    setRecent(props.recentRelease[0]);\r\n  }, [props.recentRelease[0]]);\r\n\r\n  useEffect(() => {\r\n    const downloadInfo = new FetchDownloadInfo(`${URL2}/videos/${location.video}`);\r\n    downloadInfo.loadAnime().then(data => setDownloadURL(data));\r\n  }, [downloadURL]);\r\n\r\n  //console.log(animeData);\r\n  //console.log(recentAnime);\r\n\r\n  const nextText = (data) => {\r\n    if (data !== undefined | data !== []) {\r\n      let currentIndex;\r\n      let url = data.episodeURL;\r\n      \r\n      if (url !== undefined) {\r\n        url.map((value, index) => {\r\n          if (value === `/videos/${location.video}`) {\r\n            currentIndex = --index;\r\n          }\r\n        });\r\n        return  (<Link to={`${url[currentIndex]}`}>{(currentIndex !== -1) ? \"Next EP >>\" : \"\"}</Link> );\r\n      }\r\n    } else {\r\n      return console.log('data did not render');\r\n    }\r\n  }\r\n\r\n  const previousText = (data) => {\r\n    if (data !== undefined | data !== []) {\r\n      let currentIndex;\r\n      let url = data.episodeURL;\r\n      \r\n      if (url !== undefined) {\r\n        url.map((value, index) => {\r\n          if (value === `/videos/${location.video}`) {\r\n            currentIndex = ++index;\r\n          }\r\n        });\r\n        return  (<Link to={`${url[currentIndex]}`}>{(url[currentIndex] !== undefined) ? \"<< Previous EP\" : \"\"}</Link> );\r\n      }\r\n    } else {\r\n      return console.log('data did not render');\r\n    }\r\n  }\r\n\r\n  const handleButtonHighlight = (data) => {\r\n    //console.log(data);\r\n    return (window.location.pathname === data) ? \"secondary\" : \"inherit\";\r\n  }\r\n\r\n  const renderDetails = (data) => {\r\n    if (data !== undefined) {\r\n      let num = data.episodeNumber;\r\n      let url = data.episodeURL;\r\n      return (\r\n        <Container>\r\n          <div >\r\n            <div className={classes.nameContainer}>\r\n              <h2>{data.episodeName}</h2>\r\n              <span><b>Anime Info:</b> {data.videoDetailName}</span>\r\n            </div>\r\n            <div className={classes.responsive}>\r\n              <iframe src={data.videoIframe} className={classes.iframe} allowFullScreen scrolling=\"no\"/>\r\n            </div>\r\n            <div className={classes.navContainer}>\r\n              <div className={classes.navItemPrevious}>\r\n                <p style={{ display: \"inline-block\", flexGrow: 1 }}>{previousText(animeData)}</p>\r\n              </div>\r\n              <div className={classes.navItemDownload} >\r\n                <Button\r\n                  size=\"small\"\r\n                  variant=\"contained\"\r\n                  style={{ display: \"inline-block\" }}\r\n                  onClick={() => window.open(downloadURL, \"_black\")}\r\n                >\r\n                  Download\r\n                </Button>\r\n              </div>\r\n              <div className={classes.navItemNext}>\r\n                <p style={{ display: \"inline-block\", flexGrow: 1 }}>{nextText(animeData)}</p>\r\n              </div>\r\n            </div>\r\n            <p className={classes.summaryContainer}><b>Summary:</b> {data.videoSummary}</p>\r\n            <div>\r\n              <List dense={true}>\r\n                <div className={classes.buttonContainer}>\r\n                  {(num !== undefined) ? num.map((value, index) => (\r\n                      <Link to={url[index]} className={classes.button} >\r\n                        <Button size=\"small\" variant=\"outlined\" color={handleButtonHighlight(data.episodeURL[index])} className={classes.singleButton}>\r\n                          EP {value}\r\n                        </Button>\r\n                      </Link>\r\n                  )) : console.log('nono') }\r\n                </div>\r\n              </List>\r\n            </div>\r\n          </div>\r\n        </Container>\r\n      );\r\n    } else {\r\n      return console.log('Data did not render');\r\n    }\r\n  }\r\n\r\n  const renderRecentRelease = (data) => {\r\n    if ( recentAnime !== undefined) {\r\n      return (\r\n        <List \r\n          className={classes.OGSList} \r\n          dense={true}\r\n          subheader={<p><NewReleases /> Latest Episodes</p>}\r\n        >\r\n          { data.map((data, index) => {\r\n            if (index < 10) {\r\n            return (\r\n            <div>\r\n              <Link to={`${data.url}`}>\r\n                <ListItem>\r\n                  <ListItemAvatar>\r\n                    <Avatar variant=\"rounded\" alt={data.name} src={data.img} />\r\n                  </ListItemAvatar>\r\n                  <ListItemText \r\n                    primary={<p className={classes.OGSName}>{data.name}</p>}\r\n                  />\r\n                </ListItem>\r\n                <Divider variant=\"fullWidth\" />\r\n              </Link>\r\n            </div>\r\n            )\r\n            } \r\n        })}\r\n        </List>\r\n      );\r\n    } else {\r\n      return console.log('Data did not render');\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Grid container={true}>\r\n        {/* Put ads to the below empty grid */}\r\n        <Grid item className={classes.sideBanner} lg={1} xl={2} >\r\n          <div ></div>\r\n        </Grid>\r\n        <Grid item lg={7} md={8} sm={12} xs={12} xl={6}>\r\n          <div style={{ width: '100%'}}>\r\n            {renderDetails(animeData)}\r\n          </div>\r\n        </Grid>\r\n        <Grid item lg={3} md={4} sm={12} xs={12} xl={2}>\r\n          <div style={{ width: \"100%\"}}>\r\n            {renderRecentRelease(recentAnime)}\r\n          </div>\r\n        </Grid>\r\n        {/* Put ads to the below empty grid */}\r\n        <Grid item className={classes.sideBanner} lg={1} xl={2}>\r\n          <div></div>\r\n        </Grid>\r\n      </Grid>\r\n      \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DetailsBody;","export default class FetchDetailsPage {\r\n  constructor (url) {\r\n    this.url = url;\r\n  }\r\n\r\n  loadAnime() {\r\n    return new Promise((success, failure) => {\r\n      //console.log(this.url);\r\n      fetch(this.url)\r\n        .then(html => html.text())\r\n        .then(htmlText => {\r\n          const HTMLParser = require('fast-html-parser');\r\n          const root = HTMLParser.parse(htmlText);\r\n\r\n          const fetchRoot = root.querySelector('.video-info');\r\n          //console.log(fetchRoot);\r\n\r\n          const episodeName = fetchRoot.childNodes[1].childNodes[1].rawText;\r\n          //console.log(episodeName);\r\n\r\n          const fetchVideo = fetchRoot.querySelector('.play-video');\r\n          const videoIframe = fetchVideo.childNodes[1].attributes.src;\r\n          //console.log(videoIframe);\r\n\r\n          const fetchVideoDetails = fetchRoot.querySelector('.video-details');\r\n          const videoDetailName = fetchVideoDetails.childNodes[1].structuredText;\r\n          const videoSummary = fetchVideoDetails.childNodes[3].structuredText;\r\n          \r\n          let fetchEpisodes = fetchRoot.querySelector('.listing').childNodes;\r\n\r\n          //console.log(fetchEpisodes);\r\n          const animeDetailsData = [];\r\n          for (let i=0; i<fetchEpisodes.length; i++ ) {\r\n            if (fetchEpisodes[i].attributes === undefined) continue;\r\n            if (fetchEpisodes[i].attributes.class === 'clr') {\r\n              fetchEpisodes.remove(fetchEpisodes[i]);\r\n            }\r\n          }\r\n\r\n          \r\n          let episodeURLs= [];\r\n          let episodeNumber= [];\r\n          \r\n\r\n          //console.log(fetchEpisodes);\r\n          for (let i=0; i<fetchEpisodes.length; i++) {\r\n            let loop = fetchEpisodes[i];\r\n            if(loop.isWhitespace === true) continue;\r\n\r\n            let episodeURL = loop.childNodes[1].attributes.href;\r\n            //console.log(episodeURL);\r\n            \r\n            episodeURLs.push(episodeURL);\r\n          }\r\n\r\n          for (let i=episodeURLs.length; i>0; i--) {\r\n            episodeNumber.push(i);\r\n          }\r\n          //console.log(episodes);\r\n\r\n\r\n          animeDetailsData.push({\r\n            episodeURL: episodeURLs,\r\n            episodeNumber: episodeNumber,\r\n            episodeName: episodeName,\r\n            videoDetailName: videoDetailName,\r\n            videoSummary: videoSummary,\r\n            videoIframe: videoIframe\r\n          });\r\n\r\n          success(animeDetailsData);\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n          failure(err);\r\n        });\r\n    });\r\n  }\r\n}","import React, { useEffect, useState } from 'react';\r\nimport Head from '../LayoutDesign/Head.js';\r\nimport NavHead from '../LayoutDesign/NavHead.js';\r\nimport DetailsBody from '../LayoutDesign/DetailsBody.js';\r\nimport FetchDetailsPage from '../FetchDetails/FetchDetailsPage.js';\r\nimport HomePage from '../FetchDetails/HomePage.js';\r\nimport { URL } from '../../values.js';\r\n\r\nconst DetailsPage = () => {\r\n\r\n  const [ animeData, setAnime ] = useState([]);\r\n  let [ recentRelease, setRecent ] = useState([]);\r\n\r\n  useEffect(() => { \r\n    const details = new FetchDetailsPage(`${URL}${window.location.pathname}`);\r\n    details.loadAnime().then((data) =>  {\r\n      setAnime(data);\r\n    });\r\n  }, [animeData.length]);\r\n\r\n  useEffect(() => {\r\n    const anime = new HomePage(URL, 1);\r\n    anime.loadAnime().then(data => setRecent(data));\r\n  }, [recentRelease.length]);\r\n\r\n  return (\r\n    <div>\r\n      <Head />\r\n      <NavHead />\r\n      <DetailsBody animeData={animeData} recentRelease={recentRelease} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DetailsPage;","export default class Search {\r\n  constructor(url, keyword, page) {\r\n    this.url = url;\r\n    this.page = page;\r\n    this.keyword = keyword;\r\n  }\r\n\r\n  loadAnime() {\r\n    return new Promise((success, failure) => {\r\n      //console.log(`${this.url}keyword=${this.keyword}&page=${this.page}`);\r\n      fetch(`${this.url}keyword=${this.keyword}&page=${this.page}`)\r\n        .then((html) => html.text())\r\n        .then((htmlText) => {\r\n\r\n          let fetch = require('fast-html-parser');\r\n          \r\n          let root = fetch.parse(htmlText);\r\n\r\n          let wrapper = root.querySelector('.wpb_wrapper');\r\n\r\n          let path = wrapper.childNodes[1].childNodes[2].childNodes;\r\n          //console.log(path); \r\n\r\n          let animeData = [];\r\n\r\n          for (let i=0; i<path.length; i++) {\r\n\r\n            if (path[i].isWhitespace === true) continue;\r\n            \r\n            // Check childnodes[] are not undefined, if undefined continue \r\n            if( path[i].childNodes[1] === undefined ) continue;\r\n\r\n            let episodeURL = path[i].childNodes[1].attributes.href;\r\n            //console.log(episodeURL);\r\n\r\n            let imageURL = path[i].childNodes[1].childNodes[1].childNodes[1].childNodes[1].attributes.src;\r\n            //console.log(imageURL);\r\n\r\n            let animeName = path[i].childNodes[1].childNodes[1].childNodes[1].childNodes[1].attributes.alt;\r\n\r\n            let episodeName = path[i].childNodes[1].childNodes[3].structuredText;\r\n\r\n            let episodeTime = path[i].childNodes[1].childNodes[5].structuredText;\r\n\r\n            animeData.push({\r\n              episodeURL: episodeURL,\r\n              episodeName: episodeName,\r\n              episodeImage: imageURL,\r\n              episodeTime: episodeTime,\r\n              animeName: animeName\r\n            });\r\n          }\r\n          //console.log(animeData);\r\n          success(animeData);\r\n        });\r\n    });\r\n  }\r\n}","import React from 'react';\r\nimport { Link, useParams } from 'react-router-dom';\r\nimport './PaginationComponent.css';\r\n\r\nconst SearchPageComponent = (props) => {\r\n\r\n  const location = useParams();\r\n  //console.log(location);\r\n  const renderPage = (data) => {\r\n    if (data.length !== null) {\r\n      return (\r\n        data.map((value, index) => (\r\n          <Link key={Math.random()} to={`${props.pageURL}=${value}`} className={(location.page === value) ? 'active' : null} >{value}</Link>\r\n        ))\r\n      )\r\n    } else {\r\n      return console.log('data did not render');\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"pagination\">\r\n        <a>&laquo;</a>\r\n        {renderPage(props.pagination)}\r\n        <a>&raquo;</a>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SearchPageComponent;","import React, { useState, useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { \r\n  Card, \r\n  CardMedia, \r\n  CardContent, \r\n  Grid, \r\n  List, \r\n  ListItem, \r\n  ListItemText, \r\n  Divider, \r\n  ListItemAvatar,\r\n  Avatar,\r\n} from '@material-ui/core';\r\nimport { Link } from 'react-router-dom';\r\nimport { StarBorderRounded } from '@material-ui/icons';\r\nimport PaginationComponent from './Pagination/SearchPageComponent.js';\r\n\r\nimport Footer from './Footer.js';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  sideBanner: {\r\n    display: 'none',\r\n    [theme.breakpoints.up('md')]: {\r\n      display: 'block'\r\n    },\r\n  },\r\n  epiName: {\r\n    fontSize: '12px',\r\n  },\r\n  epiTime: {\r\n    fontSize: '10px',\r\n  },\r\n  card: {\r\n    flexDirection: 'row',\r\n    float: 'left',\r\n    width: '25%',\r\n    padding: 5,\r\n    height: 280,\r\n    backgroundColor: 'transparent',\r\n    [theme.breakpoints.down('xs')]: {\r\n      width: '50%',\r\n      padding: 5\r\n    }\r\n  },\r\n  cardContent: {\r\n    padding: 0, \r\n    textAlign: 'center'\r\n  },\r\n  OGSList: {\r\n    width: '100%',\r\n    padding: 5,\r\n    marginTop: 5,\r\n    marginLeft: 5,\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n  OGSName: {\r\n    fontSize: '12px'\r\n  },\r\n}));\r\n\r\nconst BodySearchPage = (props) => {\r\n  const classes = useStyles();\r\n  const [animeData, setAnime] = useState([]);\r\n  const [onGoingSeries, setOnGoing] = useState([]);\r\n  const [pagination, setPagination] = useState([]);\r\n\r\n  useEffect(() => {\r\n    setAnime(props.data);\r\n  }, [props.data]);\r\n\r\n  useEffect(() => {\r\n    setOnGoing(props.onGoingAnime);\r\n  }, [props.onGoingAnime]);\r\n\r\n  useEffect(() => {\r\n    setPagination(props.pagination);\r\n  }, [props.pagination]);\r\n\r\n  //console.log(pagination);\r\n\r\n\r\n\r\n  // useEffect(() => {\r\n  //   if (animeData !== undefined) {\r\n  //     animeData.map((data) => console.log(data));\r\n  //   }\r\n  // });\r\n\r\n  const renderItems = (data) => {\r\n    if (animeData !== undefined) {\r\n      return (\r\n        data.map((data) => (\r\n          <Link to={`${data.episodeURL}`}>\r\n          <Card className={classes.card}>\r\n            <CardMedia \r\n              component=\"img\"\r\n              height=\"180\"\r\n              image={data.episodeImage}\r\n            />\r\n            <CardContent className={classes.cardContent}>\r\n              <p className={classes.epiName}>{data.episodeName}</p>\r\n              <span className={classes.epiTime}>{data.episodeTime}</span>\r\n            </CardContent>\r\n          </Card>\r\n          </Link>\r\n        ))\r\n      );\r\n    } else {\r\n      return console.log('Data did not render');\r\n    }\r\n  }\r\n\r\n  const renderOnGoingSeries = (data) => {\r\n    if ( onGoingSeries !== undefined) {\r\n      return (\r\n        <List \r\n          className={classes.OGSList} \r\n          dense={true}\r\n          subheader={<p><StarBorderRounded /> Popular On-Going Series</p>}\r\n        >\r\n          { data.map((data, index) => {\r\n            if (index < 15) {\r\n            return (\r\n            <div>\r\n              <Link to={`${data.url}`}>\r\n                <ListItem>\r\n                  <ListItemAvatar>\r\n                    <Avatar variant=\"rounded\" alt={data.name} src={data.img} />\r\n                  </ListItemAvatar>\r\n                  <ListItemText \r\n                    primary={<p className={classes.OGSName}>{data.name}</p>}\r\n                  />\r\n                </ListItem>\r\n              </Link>\r\n              <Divider variant=\"fullWidth\" />\r\n            </div>\r\n            )\r\n            } \r\n        })}\r\n        </List>\r\n      );\r\n    } else {\r\n      return console.log('Data did not render');\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Grid container={true}>\r\n        {/* Put ads to the below empty grid */}\r\n        <Grid item className={classes.sideBanner} lg={2} xl={2} md={1} >\r\n          <div ></div>\r\n        </Grid>\r\n        <Grid item lg={6} md={8} sm={12} xs={12} xl={6}>\r\n          <div style={{ width: '100%'}}>\r\n            {renderItems(animeData)}\r\n          </div>\r\n          <div style={{ flexDirection: 'column', float: \"right\" }}>\r\n            <PaginationComponent pagination={pagination} pageURL={props.paginationURL} />\r\n          </div>\r\n        </Grid>\r\n        <Grid item lg={2} md={2} sm={12} xs={12} xl={2}>\r\n          <div style={{ width: \"100%\" }}>\r\n            {renderOnGoingSeries(onGoingSeries)}\r\n          </div>\r\n        </Grid>\r\n        {/* Put ads to the below empty grid */}\r\n        <Grid item className={classes.sideBanner} lg={2} xl={2} md={1}>\r\n          <div></div>\r\n        </Grid>\r\n      </Grid>\r\n      \r\n      <Footer />\r\n    </div>\r\n  );  \r\n}\r\n\r\nexport default BodySearchPage;","class SearchPagination {\r\n  constructor (url, keyword, page) {\r\n    this.url = url;\r\n    this.page = page;\r\n    this.keyword = keyword;\r\n  }\r\n\r\n  loadPagination = () => {\r\n    return new Promise((success, failure) => {\r\n      //console.log(`${this.url}keyword=${this.keyword}&page=${this.page}`);\r\n      fetch(`${this.url}keyword=${this.keyword}&page=${this.page}`)\r\n        .then(html => html.text())\r\n        .then(htmlText => {\r\n          const HTMLParser = require('fast-html-parser');\r\n          \r\n          let root = HTMLParser.parse(htmlText);\r\n\r\n          let pagination = root.querySelector('.pagination');\r\n          \r\n          if (pagination.childNodes[1].childNodes[1] !== undefined) {\r\n            let page = pagination.childNodes[1].childNodes[1];\r\n            \r\n            let pageNum = [];\r\n            for (let i=0; i<page.childNodes.length - 1 ; i++) {\r\n              pageNum.push(page.childNodes[i].structuredText);\r\n            }\r\n\r\n            //console.log(pageNum );\r\n\r\n            success(pageNum);\r\n          } else {\r\n            console.log('Pagination did not render');\r\n          }\r\n        });\r\n    });\r\n  }\r\n}\r\n\r\nexport default SearchPagination;","import React, { useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport Search from '../FetchDetails/Search.js';\r\nimport Head from '../LayoutDesign/Head.js';\r\nimport Body from '../LayoutDesign/BodySearchPage.js';\r\nimport NavHead from '../LayoutDesign/NavHead.js';\r\nimport HomePage from '../FetchDetails/HomePage.js';\r\nimport SearchPagination from '../FetchDetails/SearchPagination.js';\r\nimport { searchURL, onGoingSeries } from '../../values.js';\r\n\r\nconst StartPage = () => {\r\n\r\n  let [ animeData, setAnimeData ] = useState([]);\r\n  let [ onGoingAnime, setOnGoing ] = useState([]);\r\n  let [ pagination, setPagination ] = useState([]);\r\n\r\n  let { page, keyword } = useParams();\r\n  //console.log(keyword);\r\n\r\n  const handlePage = () => {\r\n    return (page === undefined | page === null ) ? 1 : page;\r\n  }\r\n\r\n  useEffect(() => {\r\n    document.title = 'Gogoanime | Search animes - both SUB and DUB';\r\n    document.getElementsByTagName(\"meta\")[3].content = 'Gogoanime, search anime from huge list';\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const anime = new Search(searchURL, keyword , handlePage());\r\n    anime.loadAnime().then(data => setAnimeData(data));\r\n  }, [animeData.length]);\r\n\r\n  useEffect(() => {\r\n    const anime = new HomePage(onGoingSeries, 1);\r\n    anime.loadAnime().then(data => setOnGoing(data));\r\n  }, [onGoingAnime.length]);\r\n\r\n  useEffect(() => {\r\n    const pagination = new SearchPagination(searchURL, keyword, handlePage());\r\n    pagination.loadPagination().then(data => {\r\n      setPagination(data);\r\n    });\r\n  }, [pagination.length]);\r\n\r\n\r\n  //console.log(pagination);\r\n  //console.log(animeData);\r\n\r\n  return (\r\n    <div>\r\n      <Head  />\r\n      <NavHead />\r\n      <Body \r\n        data={animeData} \r\n        onGoingAnime={onGoingAnime[0]} \r\n        pagination={pagination} \r\n        paginationURL={`/search/keyword=${keyword}/page`} \r\n      />\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default StartPage;","import React, { useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport HomePage from '../FetchDetails/HomePage.js';\r\nimport Head from '../LayoutDesign/Head.js';\r\nimport Body from '../LayoutDesign/BodyStartPage.js';\r\nimport NavHead from '../LayoutDesign/NavHead.js';\r\nimport { onGoingSeries, recentDUB } from '../../values.js';\r\nimport Pagination from '../FetchDetails/HomePagePagination.js';\r\n\r\nconst RecentDUB = () => {\r\n\r\n  let [ animeData, setAnimeData ] = useState([]);\r\n  let [ onGoingAnime, setOnGoing ] = useState([]);\r\n  let [ pagination, setPagination ] = useState([]);\r\n\r\n  let { page } = useParams();\r\n  //console.log(page);\r\n\r\n  const handlePage = () => {\r\n    return (page === undefined | page === null ) ? 1 : page;\r\n  }\r\n\r\n  useEffect(() => {\r\n    document.title = 'Gogoanime | Watch Recent DUB animes in HD - both SUB and DUB';\r\n    document.getElementsByTagName(\"meta\")[3].content = 'Gogoanime, watch recent dub anime in HD, animes are updated frequently';\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const anime = new HomePage(recentDUB, handlePage());\r\n    anime.loadAnime().then(data => setAnimeData(animeData = data));\r\n  }, [animeData.length]);\r\n\r\n  useEffect(() => {\r\n    const anime = new HomePage(onGoingSeries, 1);\r\n    anime.loadAnime().then(data => setOnGoing(data));\r\n  }, [onGoingAnime.length]);\r\n\r\n  useEffect(() => {\r\n    const pagination = new Pagination(recentDUB, handlePage());\r\n    pagination.loadPagination().then(data => {\r\n      setPagination(data);\r\n    });\r\n  }, [pagination.length]);\r\n\r\n  //console.log(animeData[0]);\r\n  //console.log(pagination);\r\n\r\n  return (\r\n    <div>\r\n      <Head />\r\n      <NavHead />\r\n      <Body data={animeData[0]} onGoingAnime={onGoingAnime[0]} pagination={pagination} paginationURL={'/page'} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default RecentDUB;","import React from 'react';\nimport { Route, BrowserRouter } from 'react-router-dom';\nimport StartPage from './components/Pages/StartPage.js';\nimport MoviesPage from './components/Pages/MoviesPage.js';\nimport NewSeason from './components/Pages/NewSeason.js';\nimport PopularPage from './components/Pages/PopularPage.js';\nimport DetailsPage from './components/Pages/DetailsPage.js';\nimport SearchPage from './components/Pages/SearchPage.js';\nimport RecentDUB from './components/Pages/RecentDUB';\n\nimport './App.css';\n\nfunction App() {\n  return (\n    <div>\n      <BrowserRouter >\n        <Route path={[\"/\", \"/page=:page\"]}  exact render={(props) => <StartPage key={props.location.key} /> }  />\n        <Route path={[\"/movies\", \"/movies/page=:page\"]} exact render={(props) => <MoviesPage key={props.location.key} />} />\n        <Route path={[\"/new-season\", \"/new-season/page=:page\"]} exact render={(props) => <NewSeason key={props.location.key} />} />\n        <Route path={[\"/popular\", \"/popular/page=:page\"]} exact render={(props) => <PopularPage key={props.location.key} />} />\n        <Route path=\"/videos/:video\" exact render={(props) => <DetailsPage key={props.location.key} />} />\n        <Route path={[\"/recent-dub\", \"/recent-dub/page=:page\"]} exact render={(props) => <RecentDUB key={props.location.key} />} />\n        <Route path={[\"/search\", \"/search/keyword=:keyword/page=:page\"]} exact render={(props) => <SearchPage key={props.location.key} />}/>\n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport { render } from 'react-snapshot';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\n\nconst theme = createMuiTheme({\n  palette: {\n    type: 'dark',\n  },\n  props: {\n    MuiButtonBase: {\n      disableRipple: true\n    }\n  }\n});\n\nrender(\n  <React.StrictMode>\n    <ThemeProvider theme={theme}>\n      <CssBaseline />\n        <App />\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}