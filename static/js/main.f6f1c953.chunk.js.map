{"version":3,"sources":["values.js","components/FetchDetails/HomePage.js","components/LayoutDesign/SideDrawer.js","components/LayoutDesign/Head.js","components/LayoutDesign/Pagination/PaginationComponent.js","components/LayoutDesign/Footer.js","components/LayoutDesign/BodyStartPage.js","components/LayoutDesign/NavHead.js","components/FetchDetails/HomePagePagination.js","components/Pages/StartPage.js","components/Pages/MoviesPage.js","components/Pages/NewSeason.js","components/Pages/PopularPage.js","components/LayoutDesign/DetailsBody.js","components/FetchDetails/FetchDetailsPage.js","components/Pages/DetailsPage.js","components/FetchDetails/Search.js","components/LayoutDesign/Pagination/SearchPageComponent.js","components/LayoutDesign/BodySearchPage.js","components/FetchDetails/SearchPagination.js","components/Pages/SearchPage.js","components/Pages/RecentDUB.js","App.js","serviceWorker.js","index.js"],"names":["URL2","popularURL","onGoingSeries","moviesURL","searchURL","recentDUB","FetchHomePage","url","page","loadAnime","Promise","success","failure","fetch","then","html","text","htmlText","path","require","parse","querySelector","childNodes","animeData","entryCount","undefined","remove","i","length","loop","isWhitespace","episodeURLFetch","attributes","href","episodeURL","imgURL","querySelectorAll","src","episodeName","structuredText","publishTime","push","name","img","time","catch","err","console","log","this","useStyles","makeStyles","theme","menuButton","marginRight","spacing","drawerList","width","SideDrawer","classes","useState","state","setState","toggleDrawer","open","event","type","key","Fragment","IconButton","edge","className","color","onClick","SwipeableDrawer","anchor","onClose","onOpen","grow","flexGrow","title","display","breakpoints","up","search","position","borderRadius","shape","backgroundColor","fade","palette","common","white","marginLeft","searchIcon","padding","height","alignItems","justifyContent","inputRoot","inputInput","paddingLeft","transition","transitions","create","sectionDesktop","sectionMobile","Head","props","mobileMoreAnchorEl","setMobileMoreAnchorEl","isMobileMenuOpen","Boolean","renderMobileMenu","Menu","anchorEl","anchorOrigin","vertical","horizontal","id","keepMounted","transformOrigin","MenuItem","selected","window","location","pathname","startsWith","to","AppBar","Toolbar","Typography","variant","noWrap","TextField","label","InputProps","endAdornment","value","onChange","onChangeValue","size","onKeyDown","e","style","fontSize","aria-label","aria-controls","aria-haspopup","currentTarget","PaginationComponent","data","useParams","pagination","map","index","Math","random","pageURL","footer","bottom","background","paper","textAlign","Footer","sideBanner","epiName","epiTime","card","flexDirection","float","down","cardContent","OGSList","marginTop","OGSName","BodyStartPage","setAnime","setOnGoing","setPagination","useEffect","onGoingAnime","Grid","container","item","lg","xl","md","sm","xs","Card","CardMedia","component","image","CardContent","paginationURL","List","dense","subheader","StarBorderRounded","ListItem","ListItemAvatar","Avatar","alt","ListItemText","primary","Divider","renderOnGoingSeries","root","categories","showLogo","NavHead","HomePagePagination","loadPagination","pageNum","StartPage","setAnimeData","handlePage","HomePage","Pagination","MoviesPage","NewSeason","PopularPage","responsive","paddingBottom","iframe","border","nameContainer","summaryContainer","borderColor","buttonText","buttonContainer","button","singleButton","DetailsBody","recentAnime","setRecent","recentRelease","handleButtonHighlight","num","episodeNumber","Container","videoDetailName","videoIframe","allowFullScreen","videoSummary","Button","renderDetails","NewReleases","FetchDetailsPage","fetchRoot","rawText","fetchVideoDetails","fetchEpisodes","animeDetailsData","class","episodeURLs","DetailsPage","Search","keyword","imageURL","episodeTime","episodeImage","SearchPageComponent","BodySearchPage","SearchPagination","inputState","setInput","target","RecentDUB","App","basename","process","exact","render","SearchPage","hostname","match","createMuiTheme","MuiButtonBase","disableRipple","ReactDOM","StrictMode","ThemeProvider","CssBaseline","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.f6f1c953.chunk.js","sourcesContent":["export const URL = 'https://gogo-stream.com';\r\nexport const URL2 = 'https://gogo-stream.com/';\r\nexport const popularURL = 'https://gogo-stream.com/popular';\r\nexport const onGoingSeries = 'https://gogo-stream.com/ongoing-series';\r\nexport const moviesURL = 'https://gogo-stream.com/movies';\r\nexport const newSeasonURL = 'https://gogo-stream.com/new-season';\r\nexport const searchURL = 'https://gogo-stream.com/search.html?'; \r\nexport const recentDUB = 'https://gogo-stream.com/recently-added-dub';\r\n//const darkColorUsed = '#303030';","import { URL } from '../../values.js';\r\n\r\nexport default class FetchHomePage {\r\n\r\n  constructor(url, page) {\r\n    this.url = url;\r\n    this.page = page;\r\n  }\r\n\r\n  loadAnime = () => {\r\n    return new Promise((success, failure) => {\r\n      fetch(`${this.url}?page=${this.page}`)\r\n        .then(html => html.text())\r\n        .then(htmlText => {\r\n          const HTMLParser = require('fast-html-parser');\r\n          \r\n          let root = HTMLParser.parse(htmlText);\r\n          \r\n          let recentAddedSUB = root.querySelector('.wpb_wrapper');\r\n\r\n          let path = recentAddedSUB.childNodes[1].childNodes[2].childNodes;\r\n          //console.log(path);\r\n\r\n          const animeData = [];\r\n\r\n          let entryCount = 0;\r\n\r\n          // checks whether path[61] from path array is undefined, if removed it results in error\r\n          if(path[61].childNodes[1] === undefined) {\r\n            path.remove(path[61]);\r\n          }\r\n\r\n          for (let i=0; i<path.length; i++) {\r\n            const loop = path[i];\r\n            if (loop.isWhitespace === true) continue;\r\n            entryCount++;\r\n\r\n            // episode url\r\n            let episodeURLFetch = loop.childNodes[1].attributes.href;\r\n            let episodeURL = `${episodeURLFetch}`;\r\n            //console.log(episodeURL);\r\n\r\n            // episode image\r\n            let imgURLFetch = loop.querySelectorAll('.img');\r\n            let imgURL = imgURLFetch[0].childNodes[1].childNodes[1].attributes.src;\r\n            //console.log(imgURL);\r\n\r\n            let nameFetch = loop.querySelector('.name');\r\n            let episodeName = nameFetch.structuredText;\r\n            //console.log(episodeName);\r\n\r\n            let time = loop.querySelector('.meta');\r\n            let publishTime = time.structuredText;\r\n            //console.log(time);\r\n\r\n            animeData.push({\r\n              name: episodeName,\r\n              img: imgURL,\r\n              url: episodeURL,\r\n              time: publishTime\r\n            });\r\n          }\r\n          success([ animeData, entryCount ]);\r\n          \r\n        })\r\n        .catch(err => {\r\n          console.log(err);\r\n          failure(err);\r\n        });\r\n\r\n    });\r\n  }\r\n} ","import React, { useState } from 'react';\r\nimport { IconButton, SwipeableDrawer } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Menu as MenuIcon } from '@material-ui/icons';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  drawerList: {\r\n    width: 250\r\n  }\r\n}));\r\n\r\nconst SideDrawer = () => {\r\n  const classes = useStyles();\r\n\r\n  const [ state, setState ] = useState(false);\r\n\r\n  const toggleDrawer = ( open ) => (event) => {\r\n    if (event && event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\r\n      return;\r\n    }\r\n\r\n    setState(open);\r\n  }\r\n\r\n  return (\r\n    <React.Fragment key=\"left\">\r\n      <IconButton\r\n        edge=\"start\"\r\n        className={classes.menuButton}\r\n        color=\"inherit\"\r\n        onClick={toggleDrawer(true)}\r\n      >\r\n        <MenuIcon />\r\n      </IconButton>\r\n      <SwipeableDrawer\r\n        anchor=\"left\"\r\n        open={state}\r\n        onClose={toggleDrawer(false)}\r\n        onOpen={toggleDrawer(true)}\r\n      >\r\n        <div className={classes.drawerList}>\r\n          <p>Hey there</p>\r\n        </div>\r\n      </SwipeableDrawer>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default SideDrawer;","import React, { useState } from 'react';\r\nimport { makeStyles, fade } from '@material-ui/core/styles'\r\nimport { \r\n  AppBar, \r\n  Toolbar, \r\n  Typography, \r\n  IconButton, \r\n  Menu, \r\n  MenuItem,\r\n  TextField,\r\n} from '@material-ui/core';\r\nimport { Search as SearchIcon, MoreVert as MoreIcon } from '@material-ui/icons';\r\nimport { Link } from 'react-router-dom';\r\nimport SideDrawer from './SideDrawer.js';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  grow: {\r\n    flexGrow: 1,\r\n  },\r\n  title: {\r\n    display: 'none',\r\n    [theme.breakpoints.up('sm')]: {\r\n      display: 'block',\r\n    },\r\n  },\r\n  search: {\r\n    position: 'relative',\r\n    borderRadius: theme.shape.borderRadius,\r\n    backgroundColor: fade(theme.palette.common.white, 0.15),\r\n    '&:hover': {\r\n      backgroundColor: fade(theme.palette.common.white, 0.25),\r\n    },\r\n    marginRight: theme.spacing(2),\r\n    marginLeft: 0,\r\n    width: 'auto',\r\n    [theme.breakpoints.up('sm')]: {\r\n      marginLeft: theme.spacing(3),\r\n      width: 'auto',\r\n    },\r\n  },\r\n  searchIcon: {\r\n    padding: theme.spacing(0, 2),\r\n    height: '100%',\r\n    position: 'absolute',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  inputRoot: {\r\n    color: 'inherit',\r\n  },\r\n  inputInput: {\r\n    padding: theme.spacing(1, 1, 1, 0),\r\n    // vertical padding + font size from searchIcon\r\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n    transition: theme.transitions.create('width'),\r\n    width: '100%',\r\n    [theme.breakpoints.up('md')]: {\r\n      width: '20ch',\r\n    },\r\n  },\r\n  sectionDesktop: {\r\n    display: 'none',\r\n    [theme.breakpoints.up('md')]: {\r\n      display: 'flex',\r\n    },\r\n  },\r\n  sectionMobile: {\r\n    display: 'flex',\r\n    [theme.breakpoints.up('md')]: {\r\n      display: 'none',\r\n    },\r\n  },\r\n}));\r\n\r\nconst Head = (props) => {\r\n  const classes = useStyles();\r\n  const [mobileMoreAnchorEl, setMobileMoreAnchorEl] = useState(null);\r\n\r\n\r\n  const isMobileMenuOpen = Boolean(mobileMoreAnchorEl);\r\n\r\n  const handleMobileMenuClose = () => {\r\n    setMobileMoreAnchorEl(null);\r\n  };\r\n\r\n  // const handleMenuClose = () => {\r\n  //   setAnchorEl(null);\r\n  //   handleMobileMenuClose();\r\n  // };\r\n\r\n  const handleMobileMenuOpen = (event) => {\r\n    setMobileMoreAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const mobileMenuId = 'primary-search-account-menu-mobile';\r\n  const renderMobileMenu = (\r\n    <Menu\r\n      anchorEl={mobileMoreAnchorEl}\r\n      anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n      id={mobileMenuId}\r\n      keepMounted\r\n      transformOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n      open={isMobileMenuOpen}\r\n      onClose={handleMobileMenuClose}\r\n    >\r\n      <MenuItem selected={(window.location.pathname === \"/\" | window.location.pathname.startsWith('/page')) ? true : false}>\r\n        <Link to=\"/\">\r\n          <p>SUB Animes</p>\r\n        </Link>\r\n      </MenuItem>\r\n      <MenuItem selected={(window.location.pathname === \"/recent-dub\") ? true : false} >\r\n        <Link to=\"/recent-dub\">\r\n        <p>DUB Animes</p>\r\n        </Link>\r\n      </MenuItem>\r\n      \r\n    </Menu>\r\n  );\r\n\r\n  const handleSearch = () => {\r\n    if (window.location.pathname.startsWith(\"/search\")) {\r\n      return (\r\n        <TextField \r\n          label=\"Search\"\r\n          InputProps={{\r\n            endAdornment: (\r\n              <IconButton onClick={() => console.log('clicked')}>\r\n                <SearchIcon />\r\n              </IconButton>\r\n            )\r\n          }}\r\n          value={props.value}\r\n          onChange={props.onChangeValue}\r\n          size=\"small\"\r\n          variant=\"filled\"\r\n          color=\"secondary\"\r\n          onKeyDown={(e) => {\r\n            if (e.key === \"Enter\") {\r\n              console.log('clicked Enter')\r\n            }\r\n          }}\r\n        />\r\n      )\r\n    } else {\r\n      return (\r\n        <Link to=\"/search\">\r\n          <TextField \r\n            label=\"Search Tap twice\"\r\n            InputProps={{\r\n              endAdornment: (\r\n                <IconButton onClick={() => console.log('clicked')}>\r\n                  <SearchIcon />\r\n                </IconButton>\r\n              )\r\n            }}\r\n            value={props.value}\r\n            onChange={props.onChangeValue}\r\n            size=\"small\"\r\n            variant=\"filled\"\r\n            color=\"secondary\"\r\n            onKeyDown={(e) => {\r\n              if (e.key === \"Enter\") {\r\n                console.log('clicked Enter')\r\n              }\r\n            }}\r\n          />\r\n        </Link>\r\n      )\r\n    }\r\n  }\r\n  return (\r\n    <div className={classes.grow}>\r\n      <AppBar position=\"static\" color=\"transparent\">\r\n        <Toolbar>\r\n          <SideDrawer />\r\n          <Typography className={classes.title} variant=\"h5\" noWrap>\r\n            <Link to=\"/\">\r\n              Gogoanime\r\n            </Link>\r\n          </Typography>\r\n          <div className={classes.search}>\r\n            {handleSearch()}\r\n          </div>\r\n          <div className={classes.grow} />\r\n          <div className={classes.sectionDesktop}>\r\n            <IconButton >\r\n              <Link to=\"/\">\r\n                <span style={{ fontSize: '18px', color: (window.location.pathname === '/' | window.location.pathname.startsWith(\"/page\")) ? \"#f44336\" : \"white\" }}>\r\n                  SUB\r\n                </span>\r\n              </Link>\r\n            </IconButton>\r\n            <IconButton >\r\n              <Link to=\"/recent-dub\">\r\n                <span \r\n                  style={{ fontSize: '18px', color: (window.location.pathname.startsWith('/recent-dub')) ? \"#f44336\" : \"white\" }}>\r\n                  DUB\r\n                </span>\r\n              </Link>\r\n            </IconButton>\r\n            \r\n          </div>\r\n          <div className={classes.sectionMobile}>\r\n            <IconButton\r\n              aria-label=\"show more\"\r\n              aria-controls={mobileMenuId}\r\n              aria-haspopup=\"true\"\r\n              onClick={handleMobileMenuOpen}\r\n              color=\"inherit\"\r\n            >\r\n              <MoreIcon />\r\n            </IconButton>\r\n          </div>\r\n        </Toolbar>\r\n      </AppBar>\r\n      {renderMobileMenu}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Head;","import React from 'react';\r\nimport { Link, useParams } from 'react-router-dom';\r\nimport './PaginationComponent.css';\r\n\r\nconst PaginationComponent = (props) => {\r\n\r\n  const location = useParams();\r\n  //console.log(location);\r\n  const renderPage = (data) => {\r\n    if (data.length !== null) {\r\n      return (\r\n        data.map((value, index) => (\r\n          <Link key={Math.random()} to={`${props.pageURL}=${value}`} className={(location.page === value) ? 'active' : null} >{value}</Link>\r\n        ))\r\n      )\r\n    } else {\r\n      return console.log('data did not render');\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"pagination\">\r\n        <a>&laquo;</a>\r\n        {renderPage(props.pagination)}\r\n        <a>&raquo;</a>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PaginationComponent;","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  footer: {\r\n    position: \"relative\",\r\n    bottom: 0,\r\n    width: '100%',\r\n    height: 20,\r\n    backgroundColor: theme.palette.background.paper,\r\n    textAlign: 'center',\r\n    flexGrow: 1\r\n  }\r\n}));\r\n\r\nconst Footer = () => {\r\n  const classes = useStyles();\r\n  return (\r\n    <div className={classes.footer}>\r\n      Gogoanime © Copyright 2020, All Rights Reserved\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Footer;","import React, { useState, useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { \r\n  Card, \r\n  CardMedia, \r\n  CardContent, \r\n  Grid, \r\n  List, \r\n  ListItem, \r\n  ListItemText, \r\n  Divider, \r\n  ListItemAvatar,\r\n  Avatar,\r\n  Paper\r\n} from '@material-ui/core';\r\nimport { Link } from 'react-router-dom';\r\nimport { StarBorderRounded } from '@material-ui/icons';\r\nimport PaginationComponent from './Pagination/PaginationComponent.js';\r\n\r\nimport Footer from './Footer.js';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  sideBanner: {\r\n    display: 'none',\r\n    [theme.breakpoints.up('md')]: {\r\n      display: 'block'\r\n    },\r\n  },\r\n  epiName: {\r\n    fontSize: '12px',\r\n  },\r\n  epiTime: {\r\n    fontSize: '10px',\r\n  },\r\n  card: {\r\n    flexDirection: 'row',\r\n    float: 'left',\r\n    width: '25%',\r\n    padding: 5,\r\n    height: 280,\r\n    backgroundColor: 'transparent',\r\n    [theme.breakpoints.down('xs')]: {\r\n      width: '50%',\r\n      padding: 5\r\n    }\r\n  },\r\n  cardContent: {\r\n    padding: 0, \r\n    textAlign: 'center'\r\n  },\r\n  OGSList: {\r\n    width: '100%',\r\n    padding: 5,\r\n    marginTop: 5,\r\n    marginLeft: 5,\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n  OGSName: {\r\n    fontSize: '12px'\r\n  },\r\n}));\r\n\r\nconst BodyStartPage = (props) => {\r\n  const classes = useStyles();\r\n  const [animeData, setAnime] = useState([]);\r\n  const [onGoingSeries, setOnGoing] = useState([]);\r\n  const [pagination, setPagination] = useState([]);\r\n\r\n  useEffect(() => {\r\n    setAnime(props.data);\r\n  }, [props.data]);\r\n\r\n  useEffect(() => {\r\n    setOnGoing(props.onGoingAnime);\r\n  }, [props.onGoingAnime]);\r\n\r\n  useEffect(() => {\r\n    setPagination(props.pagination);\r\n  }, [props.pagination]);\r\n\r\n  //console.log(pagination);\r\n\r\n\r\n\r\n  // useEffect(() => {\r\n  //   if (animeData !== undefined) {\r\n  //     animeData.map((data) => console.log(data));\r\n  //   }\r\n  // });\r\n\r\n  const renderItems = (data) => {\r\n    if (animeData !== undefined) {\r\n      return (\r\n        data.map((data) => (\r\n          <Link to={`${data.url}`}>\r\n          <Card className={classes.card}>\r\n            <CardMedia \r\n              component=\"img\"\r\n              height=\"180\"\r\n              image={data.img}\r\n            />\r\n            <CardContent className={classes.cardContent}>\r\n              <p className={classes.epiName}>{data.name}</p>\r\n              <span className={classes.epiTime}>{data.time}</span>\r\n            </CardContent>\r\n          </Card>\r\n          </Link>\r\n        ))\r\n      );\r\n    } else {\r\n      return console.log('Data did not render');\r\n    }\r\n  }\r\n\r\n  const renderOnGoingSeries = (data) => {\r\n    if ( onGoingSeries !== undefined) {\r\n      return (\r\n        <List \r\n          className={classes.OGSList} \r\n          dense={true}\r\n          subheader={<p><StarBorderRounded /> Popular On-Going Series</p>}\r\n        >\r\n          { data.map((data, index) => {\r\n            if (index < 15) {\r\n            return (\r\n            <div>\r\n              <Link to={`${data.url}`}>\r\n                <ListItem>\r\n                  <ListItemAvatar>\r\n                    <Avatar variant=\"rounded\" alt={data.name} src={data.img} />\r\n                  </ListItemAvatar>\r\n                  <ListItemText \r\n                    primary={<p className={classes.OGSName}>{data.name}</p>}\r\n                  />\r\n                </ListItem>\r\n              </Link>\r\n              <Divider variant=\"fullWidth\" />\r\n            </div>\r\n            )\r\n            } \r\n        })}\r\n        </List>\r\n      );\r\n    } else {\r\n      return console.log('Data did not render');\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Grid container={true}>\r\n        {/* Put ads to the below empty grid */}\r\n        <Grid item className={classes.sideBanner} lg={2} xl={2} md={1} >\r\n          <div ></div>\r\n        </Grid>\r\n        <Grid item lg={6} md={8} sm={12} xs={12} xl={6}>\r\n          <div style={{ width: '100%'}}>\r\n            {renderItems(animeData)}\r\n          </div>\r\n          <div style={{ flexDirection: 'column', float: \"right\" }}>\r\n            <PaginationComponent pagination={pagination} pageURL={props.paginationURL} />\r\n          </div>\r\n        </Grid>\r\n        <Grid item lg={2} md={2} sm={12} xs={12} xl={2}>\r\n          <div style={{ width: \"100%\" }}>\r\n            {renderOnGoingSeries(onGoingSeries)}\r\n          </div>\r\n        </Grid>\r\n        {/* Put ads to the below empty grid */}\r\n        <Grid item className={classes.sideBanner} lg={2} xl={2} md={1}>\r\n          <div></div>\r\n        </Grid>\r\n      </Grid>\r\n      \r\n      <Footer />\r\n    </div>\r\n  );  \r\n}\r\n\r\nexport default BodyStartPage;","import React, { useState } from 'react';\r\nimport { AppBar, Toolbar, Typography, IconButton, Menu, MenuItem } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { MoreVert as MoreIcon } from '@material-ui/icons';\r\nimport { Link } from 'react-router-dom';\r\nimport './NavHead.css';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1\r\n  },\r\n  categories: {\r\n    flexGrow: 1\r\n  },\r\n  showLogo: {\r\n    display: 'none',\r\n    [theme.breakpoints.down('sm')]: {\r\n      display: 'flex'\r\n    },\r\n    flexGrow: 1\r\n  },\r\n  sectionDesktop: {\r\n    display: 'none',\r\n    [theme.breakpoints.up('sm')]: {\r\n      display: 'flex',\r\n    },\r\n    flexGrow: 1\r\n  },\r\n  sectionMobile: {\r\n    display: 'flex',\r\n    [theme.breakpoints.up('sm')]: {\r\n      display: 'none',\r\n    },\r\n  },\r\n}));\r\n\r\nconst NavHead = () => {\r\n  const classes = useStyles();\r\n\r\n  const [mobileMoreAnchorEl, setMobileMoreAnchorEl] = useState(null);\r\n\r\n  const isMobileMenuOpen = Boolean(mobileMoreAnchorEl);\r\n  \r\n  // useEffect(() => {\r\n\r\n  // }, [window.location.pathname]);\r\n\r\n  const handleMobileMenuClose = () => {\r\n    setMobileMoreAnchorEl(null);\r\n  };\r\n\r\n  const handleMobileMenuOpen = (event) => {\r\n    setMobileMoreAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const mobileMenuId = 'mobile-view';\r\n  const renderMobileMenu = (\r\n    <Menu\r\n      anchorEl={mobileMoreAnchorEl}\r\n      anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n      id={mobileMenuId}\r\n      keepMounted\r\n      transformOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n      open={isMobileMenuOpen}\r\n      onClose={handleMobileMenuClose}\r\n    >\r\n      <MenuItem selected={(window.location.pathname === \"/\" | window.location.pathname.startsWith('/page')) ? true : false}>\r\n        <Link to=\"/\">\r\n          <p>Recent Release</p>\r\n        </Link>\r\n      </MenuItem>\r\n      <MenuItem selected={(window.location.pathname === \"/movies\") ? true : false}>\r\n        <Link to=\"/movies\">\r\n          <p>Movies</p>\r\n        </Link>\r\n      </MenuItem>\r\n      <MenuItem selected={(window.location.pathname === \"/new-season\") ? true : false}>\r\n        <Link to=\"/new-season\">\r\n          <p>New Season</p>\r\n        </Link>\r\n      </MenuItem>\r\n      <MenuItem selected={(window.location.pathname === \"/popular\") ? true : false}>\r\n        <Link to=\"/popular\">\r\n          <p>Popular Anime</p>\r\n        </Link>\r\n      </MenuItem>\r\n    </Menu>\r\n  );\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\" color=\"inherit\">\r\n        <Toolbar>\r\n          <Typography className={classes.showLogo}>\r\n            Gogoanime\r\n          </Typography>\r\n          <div className={classes.sectionDesktop}>\r\n            <Typography className={classes.categories}>\r\n              <Link to=\"/\" >\r\n                <span style={{ color: (window.location.pathname === \"/\" | window.location.pathname.startsWith('/page')) ? \"#f44336\" : \"white\" }}>\r\n                  Recent Release\r\n                </span>\r\n              </Link>\r\n            </Typography>\r\n            <Typography className={classes.categories}  >\r\n              <Link to=\"/movies\" >\r\n                <span style={{ color: window.location.pathname.startsWith('/movies') ? \"#f44336\" : \"white\" }}>\r\n                  Movies\r\n                </span>\r\n              </Link>\r\n            </Typography>\r\n            <Typography className={classes.categories}  >\r\n              <Link to=\"/new-season\" >\r\n                <span style={{ color: window.location.pathname.startsWith('/new-season') ? \"#f44336\" : \"white\" }}>\r\n                  New Season\r\n                </span>\r\n              </Link>\r\n            </Typography>\r\n            <Typography className={classes.categories}  >\r\n              <Link to=\"/popular\" >\r\n                <span style={{ color: window.location.pathname.startsWith('/popular') ? \"#f44336\" : \"white\" }}>\r\n                  Popular Anime\r\n                </span>\r\n              </Link>\r\n            </Typography>\r\n          </div>\r\n          <div className={classes.sectionMobile}>\r\n            <IconButton\r\n              aria-label=\"show more\"\r\n              aria-controls={mobileMenuId}\r\n              aria-haspopup=\"true\"\r\n              onClick={handleMobileMenuOpen}\r\n              color=\"inherit\"\r\n            >\r\n              <MoreIcon />\r\n            </IconButton>\r\n          </div>\r\n        </Toolbar>\r\n      </AppBar>\r\n      {renderMobileMenu}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NavHead;","class HomePagePagination {\r\n  constructor (url, page) {\r\n    this.url = url;\r\n    this.page = page;\r\n  }\r\n\r\n  loadPagination = () => {\r\n    return new Promise((success, failure) => {\r\n      //console.log(`${this.url}?page=${this.page}`);\r\n      fetch(`${this.url}?page=${this.page}`)\r\n        .then(html => html.text())\r\n        .then(htmlText => {\r\n          const HTMLParser = require('fast-html-parser');\r\n          \r\n          let root = HTMLParser.parse(htmlText);\r\n\r\n          let pagination = root.querySelector('.pagination');\r\n\r\n          let page = pagination.childNodes[1].childNodes[1];\r\n          \r\n          let pageNum = [];\r\n          for (let i=0; i<page.childNodes.length - 1 ; i++) {\r\n            pageNum.push(page.childNodes[i].structuredText);\r\n          }\r\n\r\n          //console.log(pageNum );\r\n\r\n          success(pageNum);\r\n        });\r\n    });\r\n  }\r\n}\r\n\r\nexport default HomePagePagination;","import React, { useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport HomePage from '../FetchDetails/HomePage.js';\r\nimport Head from '../LayoutDesign/Head.js';\r\nimport Body from '../LayoutDesign/BodyStartPage.js';\r\nimport NavHead from '../LayoutDesign/NavHead.js';\r\nimport { onGoingSeries, URL2 } from '../../values.js';\r\nimport Pagination from '../FetchDetails/HomePagePagination.js';\r\n\r\nconst StartPage = () => {\r\n\r\n  let [ animeData, setAnimeData ] = useState([]);\r\n  let [ onGoingAnime, setOnGoing ] = useState([]);\r\n  let [ pagination, setPagination ] = useState([]);\r\n\r\n  let { page } = useParams();\r\n  //console.log(page);\r\n\r\n  const handlePage = () => {\r\n    return (page === undefined | page === null ) ? 1 : page;\r\n  }\r\n\r\n  useEffect(() => {\r\n    const anime = new HomePage(URL2, handlePage());\r\n    anime.loadAnime().then(data => setAnimeData(animeData = data));\r\n  }, [animeData.length]);\r\n\r\n  useEffect(() => {\r\n    const anime = new HomePage(onGoingSeries, 1);\r\n    anime.loadAnime().then(data => setOnGoing(data));\r\n  }, [onGoingAnime.length]);\r\n\r\n  useEffect(() => {\r\n    const pagination = new Pagination(URL2, handlePage());\r\n    pagination.loadPagination().then(data => {\r\n      setPagination(data);\r\n    });\r\n  }, [pagination.length]);\r\n\r\n  //console.log(animeData[0]);\r\n  //console.log(pagination);\r\n\r\n  return (\r\n    <div>\r\n      <Head />\r\n      <NavHead />\r\n      <Body data={animeData[0]} onGoingAnime={onGoingAnime[0]} pagination={pagination} paginationURL={'/page'} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default StartPage;","import React, { useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport HomePage from '../FetchDetails/HomePage.js';\r\nimport Head from '../LayoutDesign/Head.js';\r\nimport Body from '../LayoutDesign/BodyStartPage.js';\r\nimport NavHead from '../LayoutDesign/NavHead.js';\r\nimport { onGoingSeries, moviesURL } from '../../values.js';\r\nimport Pagination from '../FetchDetails/HomePagePagination.js';\r\n\r\nconst MoviesPage = () => {\r\n\r\n  let [ animeData, setAnimeData ] = useState([]);\r\n  let [ onGoingAnime, setOnGoing ] = useState([]);\r\n  let [ pagination, setPagination ] = useState([]);\r\n\r\n  let { page } = useParams();\r\n  //console.log(page);\r\n\r\n  const handlePage = () => {\r\n    return (page === undefined | page === null ) ? 1 : page;\r\n  }\r\n\r\n  useEffect(() => {\r\n    const anime = new HomePage(moviesURL, handlePage());\r\n    anime.loadAnime().then(data => setAnimeData(animeData = data));\r\n  }, [animeData.length]);\r\n\r\n  useEffect(() => {\r\n    const anime = new HomePage(onGoingSeries, 1);\r\n    anime.loadAnime().then(data => setOnGoing(data));\r\n  }, [onGoingAnime.length]);\r\n\r\n  useEffect(() => {\r\n    const pagination = new Pagination(moviesURL, handlePage());\r\n    pagination.loadPagination().then(data => {\r\n      setPagination(data);\r\n    });\r\n  }, [pagination.length]);\r\n\r\n  //console.log(animeData[0]);\r\n  //console.log(pagination);\r\n\r\n  return (\r\n    <div>\r\n      <Head />\r\n      <NavHead />\r\n      <Body data={animeData[0]} onGoingAnime={onGoingAnime[0]} pagination={pagination} paginationURL={'/movies/page'} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MoviesPage;","import React, { useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport HomePage from '../FetchDetails/HomePage.js';\r\nimport Head from '../LayoutDesign/Head.js';\r\nimport Body from '../LayoutDesign/BodyStartPage.js';\r\nimport NavHead from '../LayoutDesign/NavHead.js';\r\nimport { onGoingSeries, newSeasonURL } from '../../values.js';\r\nimport Pagination from '../FetchDetails/HomePagePagination.js';\r\n\r\nconst NewSeason = () => {\r\n\r\n  let [ animeData, setAnimeData ] = useState([]);\r\n  let [ onGoingAnime, setOnGoing ] = useState([]);\r\n  let [ pagination, setPagination ] = useState([]);\r\n\r\n  let { page } = useParams();\r\n  //console.log(page);\r\n\r\n  const handlePage = () => {\r\n    return (page === undefined | page === null ) ? 1 : page;\r\n  }\r\n\r\n  useEffect(() => {\r\n    const anime = new HomePage(newSeasonURL, handlePage());\r\n    anime.loadAnime().then(data => setAnimeData(animeData = data));\r\n  }, [animeData.length]);\r\n\r\n  useEffect(() => {\r\n    const anime = new HomePage(onGoingSeries, 1);\r\n    anime.loadAnime().then(data => setOnGoing(data));\r\n  }, [onGoingAnime.length]);\r\n\r\n  useEffect(() => {\r\n    const pagination = new Pagination(newSeasonURL, handlePage());\r\n    pagination.loadPagination().then(data => {\r\n      setPagination(data);\r\n    });\r\n  }, [pagination.length]);\r\n\r\n  //console.log(animeData[0]);\r\n  //console.log(pagination);\r\n\r\n  return (\r\n    <div>\r\n      <Head />\r\n      <NavHead />\r\n      <Body data={animeData[0]} onGoingAnime={onGoingAnime[0]} pagination={pagination} paginationURL={'/new-season/page'} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NewSeason;","import React, { useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport HomePage from '../FetchDetails/HomePage.js';\r\nimport Head from '../LayoutDesign/Head.js';\r\nimport Body from '../LayoutDesign/BodyStartPage.js';\r\nimport NavHead from '../LayoutDesign/NavHead.js';\r\nimport { onGoingSeries, popularURL } from '../../values.js';\r\nimport Pagination from '../FetchDetails/HomePagePagination.js';\r\n\r\nconst PopularPage = () => {\r\n\r\n  let [ animeData, setAnimeData ] = useState([]);\r\n  let [ onGoingAnime, setOnGoing ] = useState([]);\r\n  let [ pagination, setPagination ] = useState([]);\r\n\r\n  let { page } = useParams();\r\n  //console.log(page);\r\n\r\n  const handlePage = () => {\r\n    return (page === undefined | page === null ) ? 1 : page;\r\n  }\r\n\r\n  useEffect(() => {\r\n    const anime = new HomePage(popularURL, handlePage());\r\n    anime.loadAnime().then(data => setAnimeData(animeData = data));\r\n  }, [animeData.length]);\r\n\r\n  useEffect(() => {\r\n    const anime = new HomePage(onGoingSeries, 1);\r\n    anime.loadAnime().then(data => setOnGoing(data));\r\n  }, [onGoingAnime.length]);\r\n\r\n  useEffect(() => {\r\n    const pagination = new Pagination(popularURL, handlePage());\r\n    pagination.loadPagination().then(data => {\r\n      setPagination(data);\r\n    });\r\n  }, [pagination.length]);\r\n\r\n  //console.log(animeData[0]);\r\n  //console.log(pagination);\r\n\r\n  return (\r\n    <div>\r\n      <Head />\r\n      <NavHead />\r\n      <Body data={animeData[0]} onGoingAnime={onGoingAnime[0]} pagination={pagination} paginationURL={'/popular/page'} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PopularPage;","import React, { useEffect, useState } from 'react';\r\nimport { Grid, Container, List, ListItem, Button, ListItemAvatar, ListItemText, Divider, Avatar } from '@material-ui/core';\r\nimport { NewReleases } from '@material-ui/icons';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  sideBanner: {\r\n    display: 'none',\r\n    [theme.breakpoints.up('md')]: {\r\n      display: 'block'\r\n    },\r\n  },\r\n  responsive: {\r\n    width: '100%',\r\n    height: 0,\r\n    paddingBottom: '57%',\r\n    position: 'relative',\r\n    [theme.breakpoints.down('xs')]: {\r\n      width: '100%',\r\n      height: 0,\r\n      paddingBottom: '80%',\r\n      position: 'relative',\r\n    }\r\n  },\r\n  iframe: {\r\n    position: 'absolute',\r\n    border: 0,\r\n    width: '100%',\r\n    height: '100%',\r\n  },\r\n  nameContainer: {\r\n    padding: '5px'\r\n  },\r\n  summaryContainer: {\r\n    padding: '5px',\r\n    border: '1px solid',\r\n    borderColor: 'grey'\r\n  },\r\n  buttonText: {\r\n    color: 'green'\r\n  },\r\n  buttonContainer: {\r\n    float: 'left',\r\n    flexDirection: 'row',\r\n  },\r\n  button: {\r\n    padding: 5,\r\n\r\n  },\r\n  singleButton: {\r\n    marginTop: 3,\r\n  },\r\n  OGSList: {\r\n    width: '100%',\r\n    padding: 5,\r\n    marginTop: 5,\r\n    marginLeft: 5,\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n  OGSName: {\r\n    fontSize: '12px'\r\n  },\r\n}));\r\n\r\nconst DetailsBody = (props) => {\r\n  const classes = useStyles();\r\n  \r\n  const [animeData, setAnime] = useState([]);\r\n  const [recentAnime, setRecent] = useState([]);\r\n\r\n  useEffect(() => {\r\n    setAnime(props.animeData[0]);\r\n  }, [props.animeData[0]]);\r\n\r\n  useEffect(() => {\r\n    setRecent(props.recentRelease[0]);\r\n  }, [props.recentRelease[0]]);\r\n\r\n  //console.log(animeData);\r\n  //console.log(recentAnime);\r\n\r\n  const handleButtonHighlight = (data) => {\r\n    //console.log(data);\r\n    return (window.location.pathname === data) ? \"secondary\" : \"inherit\";\r\n  }\r\n\r\n  const renderDetails = (data) => {\r\n    if (data !== undefined) {\r\n      let num = data.episodeNumber;\r\n      let url = data.episodeURL;\r\n      return (\r\n        <Container>\r\n          <div >\r\n            <div className={classes.nameContainer}>\r\n              <h2>{data.episodeName}</h2>\r\n              <span><b>Anime Info:</b> {data.videoDetailName}</span>\r\n            </div>\r\n            <div className={classes.responsive}>\r\n              <iframe src={data.videoIframe} className={classes.iframe} allowFullScreen />\r\n            </div>\r\n            <p className={classes.summaryContainer}><b>Summary:</b> {data.videoSummary}</p>\r\n            <div>\r\n              <List dense={true}>\r\n                <div className={classes.buttonContainer}>\r\n                  {(num !== undefined) ? num.map((value, index) => \r\n                      <Link to={url[index]} className={classes.button} >\r\n                        <Button size=\"small\" variant=\"outlined\" color={handleButtonHighlight(data.episodeURL[index])} className={classes.singleButton}>\r\n                          EP {value}\r\n                        </Button>\r\n                      </Link>\r\n                   ) : console.log('nono') }\r\n                </div>\r\n              </List>\r\n            </div>\r\n          </div>\r\n        </Container>\r\n      );\r\n    } else {\r\n      return console.log('Data did not render');\r\n    }\r\n  }\r\n\r\n  const renderRecentRelease = (data) => {\r\n    if ( recentAnime !== undefined) {\r\n      return (\r\n        <List \r\n          className={classes.OGSList} \r\n          dense={true}\r\n          subheader={<p><NewReleases /> Popular On-Going Series</p>}\r\n        >\r\n          { data.map((data, index) => {\r\n            if (index < 10) {\r\n            return (\r\n            <div>\r\n              <Link to={`${data.url}`}>\r\n                <ListItem>\r\n                  <ListItemAvatar>\r\n                    <Avatar variant=\"rounded\" alt={data.name} src={data.img} />\r\n                  </ListItemAvatar>\r\n                  <ListItemText \r\n                    primary={<p className={classes.OGSName}>{data.name}</p>}\r\n                  />\r\n                </ListItem>\r\n                <Divider variant=\"fullWidth\" />\r\n              </Link>\r\n            </div>\r\n            )\r\n            } \r\n        })}\r\n        </List>\r\n      );\r\n    } else {\r\n      return console.log('Data did not render');\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Grid container={true}>\r\n        {/* Put ads to the below empty grid */}\r\n        <Grid item className={classes.sideBanner} lg={1} xl={2} >\r\n          <div ></div>\r\n        </Grid>\r\n        <Grid item lg={7} md={8} sm={12} xs={12} xl={6}>\r\n          <div style={{ width: '100%'}}>\r\n            {renderDetails(animeData)}\r\n          </div>\r\n        </Grid>\r\n        <Grid item lg={3} md={4} sm={12} xs={12} xl={2}>\r\n          <div style={{ width: \"100%\"}}>\r\n            {renderRecentRelease(recentAnime)}\r\n          </div>\r\n        </Grid>\r\n        {/* Put ads to the below empty grid */}\r\n        <Grid item className={classes.sideBanner} lg={1} xl={2}>\r\n          <div></div>\r\n        </Grid>\r\n      </Grid>\r\n      \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DetailsBody;","export default class FetchDetailsPage {\r\n  constructor (url) {\r\n    this.url = url;\r\n  }\r\n\r\n  loadAnime() {\r\n    return new Promise((success, failure) => {\r\n      fetch(this.url)\r\n        .then(html => html.text())\r\n        .then(htmlText => {\r\n          const HTMLParser = require('fast-html-parser');\r\n          const root = HTMLParser.parse(htmlText);\r\n\r\n          const fetchRoot = root.querySelector('.video-info');\r\n          //console.log(fetchRoot);\r\n\r\n          const episodeName = fetchRoot.childNodes[1].childNodes[1].rawText;\r\n          //console.log(episodeName);\r\n\r\n          const fetchVideo = fetchRoot.querySelector('.play-video');\r\n          const videoIframe = fetchVideo.childNodes[1].attributes.src;\r\n          //console.log(videoIframe);\r\n\r\n          const fetchVideoDetails = fetchRoot.querySelector('.video-details');\r\n          const videoDetailName = fetchVideoDetails.childNodes[1].structuredText;\r\n          const videoSummary = fetchVideoDetails.childNodes[3].structuredText;\r\n          \r\n          let fetchEpisodes = fetchRoot.querySelector('.listing').childNodes;\r\n\r\n          //console.log(fetchEpisodes);\r\n          const animeDetailsData = [];\r\n          for (let i=0; i<fetchEpisodes.length; i++ ) {\r\n            if (fetchEpisodes[i].attributes === undefined) continue;\r\n            if (fetchEpisodes[i].attributes.class === 'clr') {\r\n              fetchEpisodes.remove(fetchEpisodes[i]);\r\n            }\r\n          }\r\n\r\n          \r\n          let episodeURLs= [];\r\n          let episodeNumber= [];\r\n          \r\n\r\n          //console.log(fetchEpisodes);\r\n          for (let i=0; i<fetchEpisodes.length; i++) {\r\n            let loop = fetchEpisodes[i];\r\n            if(loop.isWhitespace === true) continue;\r\n\r\n            let episodeURL = loop.childNodes[1].attributes.href;\r\n            //console.log(episodeURL);\r\n            \r\n            episodeURLs.push(episodeURL);\r\n          }\r\n\r\n          for (let i=episodeURLs.length; i>0; i--) {\r\n            episodeNumber.push(i);\r\n          }\r\n          //console.log(episodes);\r\n\r\n\r\n          animeDetailsData.push({\r\n            episodeURL: episodeURLs,\r\n            episodeNumber: episodeNumber,\r\n            episodeName: episodeName,\r\n            videoDetailName: videoDetailName,\r\n            videoSummary: videoSummary,\r\n            videoIframe: videoIframe\r\n          });\r\n\r\n          success(animeDetailsData);\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n          failure(err);\r\n        });\r\n    });\r\n  }\r\n}","import React, { useEffect, useState } from 'react';\r\nimport Head from '../LayoutDesign/Head.js';\r\nimport NavHead from '../LayoutDesign/NavHead.js';\r\nimport DetailsBody from '../LayoutDesign/DetailsBody.js';\r\nimport FetchDetailsPage from '../FetchDetails/FetchDetailsPage.js';\r\nimport HomePage from '../FetchDetails/HomePage.js';\r\nimport { URL } from '../../values.js';\r\n\r\nconst DetailsPage = () => {\r\n\r\n  const [ animeData, setAnime ] = useState([]);\r\n  let [ recentRelease, setRecent ] = useState([]);\r\n\r\n  useEffect(() => { \r\n    const details = new FetchDetailsPage(`${URL}${window.location.pathname}`);\r\n    details.loadAnime().then((data) =>  {\r\n      setAnime(data);\r\n    });\r\n  }, [animeData.length]);\r\n\r\n  useEffect(() => {\r\n    const anime = new HomePage(URL, 1);\r\n    anime.loadAnime().then(data => setRecent(data));\r\n  }, [recentRelease.length]);\r\n\r\n  return (\r\n    <div>\r\n      <Head />\r\n      <NavHead />\r\n      <DetailsBody animeData={animeData} recentRelease={recentRelease} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DetailsPage;","export default class Search {\r\n  constructor(url, keyword, page) {\r\n    this.url = url;\r\n    this.page = page;\r\n    this.keyword = keyword;\r\n  }\r\n\r\n  loadAnime() {\r\n    return new Promise((success, failure) => {\r\n      //console.log(`${this.url}keyword=${this.keyword}&page=${this.page}`);\r\n      fetch(`${this.url}keyword=${this.keyword}&page=${this.page}`)\r\n        .then((html) => html.text())\r\n        .then((htmlText) => {\r\n\r\n          let fetch = require('fast-html-parser');\r\n          \r\n          let root = fetch.parse(htmlText);\r\n\r\n          let wrapper = root.querySelector('.wpb_wrapper');\r\n\r\n          let path = wrapper.childNodes[1].childNodes[2].childNodes;\r\n          //console.log(path); \r\n\r\n          let animeData = [];\r\n\r\n          for (let i=0; i<path.length; i++) {\r\n\r\n            if (path[i].isWhitespace === true) continue;\r\n            \r\n            // Check childnodes[] are not undefined, if undefined continue \r\n            if( path[i].childNodes[1] === undefined ) continue;\r\n\r\n            let episodeURL = path[i].childNodes[1].attributes.href;\r\n            //console.log(episodeURL);\r\n\r\n            let imageURL = path[i].childNodes[1].childNodes[1].childNodes[1].childNodes[1].attributes.src;\r\n            //console.log(imageURL);\r\n\r\n            let episodeName = path[i].childNodes[1].childNodes[3].structuredText;\r\n            //console.log(episodeName);\r\n\r\n            let episodeTime = path[i].childNodes[1].childNodes[5].structuredText;\r\n            //console.log(episodeTime);\r\n\r\n            animeData.push({\r\n              episodeURL: episodeURL,\r\n              episodeName: episodeName,\r\n              episodeImage: imageURL,\r\n              episodeTime: episodeTime\r\n            });\r\n          }\r\n          //console.log(animeData);\r\n          success(animeData);\r\n        });\r\n    });\r\n  }\r\n}","import React from 'react';\r\nimport { Link, useParams } from 'react-router-dom';\r\nimport './PaginationComponent.css';\r\n\r\nconst SearchPageComponent = (props) => {\r\n\r\n  const location = useParams();\r\n  //console.log(location);\r\n  const renderPage = (data) => {\r\n    if (data.length !== null) {\r\n      return (\r\n        data.map((value, index) => (\r\n          <Link key={Math.random()} to={`${props.pageURL}=${value}`} className={(location.page === value) ? 'active' : null} >{value}</Link>\r\n        ))\r\n      )\r\n    } else {\r\n      return console.log('data did not render');\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"pagination\">\r\n        <a>&laquo;</a>\r\n        {renderPage(props.pagination)}\r\n        <a>&raquo;</a>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SearchPageComponent;","import React, { useState, useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { \r\n  Card, \r\n  CardMedia, \r\n  CardContent, \r\n  Grid, \r\n  List, \r\n  ListItem, \r\n  ListItemText, \r\n  Divider, \r\n  ListItemAvatar,\r\n  Avatar,\r\n  Paper\r\n} from '@material-ui/core';\r\nimport { Link } from 'react-router-dom';\r\nimport { StarBorderRounded } from '@material-ui/icons';\r\nimport PaginationComponent from './Pagination/SearchPageComponent.js';\r\n\r\nimport Footer from './Footer.js';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  sideBanner: {\r\n    display: 'none',\r\n    [theme.breakpoints.up('md')]: {\r\n      display: 'block'\r\n    },\r\n  },\r\n  epiName: {\r\n    fontSize: '12px',\r\n  },\r\n  epiTime: {\r\n    fontSize: '10px',\r\n  },\r\n  card: {\r\n    flexDirection: 'row',\r\n    float: 'left',\r\n    width: '25%',\r\n    padding: 5,\r\n    height: 280,\r\n    backgroundColor: 'transparent',\r\n    [theme.breakpoints.down('xs')]: {\r\n      width: '50%',\r\n      padding: 5\r\n    }\r\n  },\r\n  cardContent: {\r\n    padding: 0, \r\n    textAlign: 'center'\r\n  },\r\n  OGSList: {\r\n    width: '100%',\r\n    padding: 5,\r\n    marginTop: 5,\r\n    marginLeft: 5,\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n  OGSName: {\r\n    fontSize: '12px'\r\n  },\r\n}));\r\n\r\nconst BodySearchPage = (props) => {\r\n  const classes = useStyles();\r\n  const [animeData, setAnime] = useState([]);\r\n  const [onGoingSeries, setOnGoing] = useState([]);\r\n  const [pagination, setPagination] = useState([]);\r\n\r\n  useEffect(() => {\r\n    setAnime(props.data);\r\n  }, [props.data]);\r\n\r\n  useEffect(() => {\r\n    setOnGoing(props.onGoingAnime);\r\n  }, [props.onGoingAnime]);\r\n\r\n  useEffect(() => {\r\n    setPagination(props.pagination);\r\n  }, [props.pagination]);\r\n\r\n  //console.log(pagination);\r\n\r\n\r\n\r\n  // useEffect(() => {\r\n  //   if (animeData !== undefined) {\r\n  //     animeData.map((data) => console.log(data));\r\n  //   }\r\n  // });\r\n\r\n  const renderItems = (data) => {\r\n    if (animeData !== undefined) {\r\n      return (\r\n        data.map((data) => (\r\n          <Link to={`${data.episodeURL}`}>\r\n          <Card className={classes.card}>\r\n            <CardMedia \r\n              component=\"img\"\r\n              height=\"180\"\r\n              image={data.episodeImage}\r\n            />\r\n            <CardContent className={classes.cardContent}>\r\n              <p className={classes.epiName}>{data.episodeName}</p>\r\n              <span className={classes.epiTime}>{data.episodeTime}</span>\r\n            </CardContent>\r\n          </Card>\r\n          </Link>\r\n        ))\r\n      );\r\n    } else {\r\n      return console.log('Data did not render');\r\n    }\r\n  }\r\n\r\n  const renderOnGoingSeries = (data) => {\r\n    if ( onGoingSeries !== undefined) {\r\n      return (\r\n        <List \r\n          className={classes.OGSList} \r\n          dense={true}\r\n          subheader={<p><StarBorderRounded /> Popular On-Going Series</p>}\r\n        >\r\n          { data.map((data, index) => {\r\n            if (index < 15) {\r\n            return (\r\n            <div>\r\n              <Link to={`${data.url}`}>\r\n                <ListItem>\r\n                  <ListItemAvatar>\r\n                    <Avatar variant=\"rounded\" alt={data.name} src={data.img} />\r\n                  </ListItemAvatar>\r\n                  <ListItemText \r\n                    primary={<p className={classes.OGSName}>{data.name}</p>}\r\n                  />\r\n                </ListItem>\r\n              </Link>\r\n              <Divider variant=\"fullWidth\" />\r\n            </div>\r\n            )\r\n            } \r\n        })}\r\n        </List>\r\n      );\r\n    } else {\r\n      return console.log('Data did not render');\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Grid container={true}>\r\n        {/* Put ads to the below empty grid */}\r\n        <Grid item className={classes.sideBanner} lg={2} xl={2} md={1} >\r\n          <div ></div>\r\n        </Grid>\r\n        <Grid item lg={6} md={8} sm={12} xs={12} xl={6}>\r\n          <div style={{ width: '100%'}}>\r\n            {renderItems(animeData)}\r\n          </div>\r\n          <div style={{ flexDirection: 'column', float: \"right\" }}>\r\n            <PaginationComponent pagination={pagination} pageURL={props.paginationURL} />\r\n          </div>\r\n        </Grid>\r\n        <Grid item lg={2} md={2} sm={12} xs={12} xl={2}>\r\n          <div style={{ width: \"100%\" }}>\r\n            {renderOnGoingSeries(onGoingSeries)}\r\n          </div>\r\n        </Grid>\r\n        {/* Put ads to the below empty grid */}\r\n        <Grid item className={classes.sideBanner} lg={2} xl={2} md={1}>\r\n          <div></div>\r\n        </Grid>\r\n      </Grid>\r\n      \r\n      <Footer />\r\n    </div>\r\n  );  \r\n}\r\n\r\nexport default BodySearchPage;","class SearchPagination {\r\n  constructor (url, keyword, page) {\r\n    this.url = url;\r\n    this.page = page;\r\n    this.keyword = keyword;\r\n  }\r\n\r\n  loadPagination = () => {\r\n    return new Promise((success, failure) => {\r\n      //console.log(`${this.url}keyword=${this.keyword}&page=${this.page}`);\r\n      fetch(`${this.url}keyword=${this.keyword}&page=${this.page}`)\r\n        .then(html => html.text())\r\n        .then(htmlText => {\r\n          const HTMLParser = require('fast-html-parser');\r\n          \r\n          let root = HTMLParser.parse(htmlText);\r\n\r\n          let pagination = root.querySelector('.pagination');\r\n          \r\n          if (pagination.childNodes[1].childNodes[1] !== undefined) {\r\n            let page = pagination.childNodes[1].childNodes[1];\r\n            \r\n            let pageNum = [];\r\n            for (let i=0; i<page.childNodes.length - 1 ; i++) {\r\n              pageNum.push(page.childNodes[i].structuredText);\r\n            }\r\n\r\n            //console.log(pageNum );\r\n\r\n            success(pageNum);\r\n          } else {\r\n            console.log('Pagination did not render');\r\n          }\r\n        });\r\n    });\r\n  }\r\n}\r\n\r\nexport default SearchPagination;","import React, { useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport Search from '../FetchDetails/Search.js';\r\nimport Head from '../LayoutDesign/Head.js';\r\nimport Body from '../LayoutDesign/BodySearchPage.js';\r\nimport NavHead from '../LayoutDesign/NavHead.js';\r\nimport HomePage from '../FetchDetails/HomePage.js';\r\nimport SearchPagination from '../FetchDetails/SearchPagination.js';\r\nimport { searchURL, onGoingSeries } from '../../values.js';\r\n\r\nconst StartPage = () => {\r\n\r\n  let [ animeData, setAnimeData ] = useState([]);\r\n  let [ onGoingAnime, setOnGoing ] = useState([]);\r\n  let [ pagination, setPagination ] = useState([]);\r\n  let [ inputState, setInput ] = useState('');\r\n\r\n  let { page, keyword } = useParams();\r\n  //console.log(keyword);\r\n\r\n  const handlePage = () => {\r\n    return (page === undefined | page === null ) ? 1 : page;\r\n  }\r\n\r\n  useEffect(() => {\r\n    const anime = new Search(searchURL, (inputState === \"\") ? keyword : inputState , handlePage());\r\n    anime.loadAnime().then(data => setAnimeData(data));\r\n  }, [inputState]);\r\n\r\n  useEffect(() => {\r\n    const anime = new HomePage(onGoingSeries, 1);\r\n    anime.loadAnime().then(data => setOnGoing(data));\r\n  }, [onGoingAnime.length]);\r\n\r\n  useEffect(() => {\r\n    const pagination = new SearchPagination(searchURL, (inputState === \"\") ? keyword : inputState, handlePage());\r\n    pagination.loadPagination().then(data => {\r\n      setPagination(data);\r\n    });\r\n  }, [inputState]);\r\n\r\n \r\n  const handleChangeValue = (e) => {\r\n    setInput(e.target.value);\r\n  }\r\n\r\n  //console.log(pagination);\r\n  //console.log(animeData);\r\n  //console.log(inputState);\r\n\r\n  return (\r\n    <div>\r\n      <Head value={inputState} onChangeValue={handleChangeValue} />\r\n      <NavHead />\r\n      <Body \r\n        data={animeData} \r\n        onGoingAnime={onGoingAnime[0]} \r\n        pagination={pagination} \r\n        paginationURL={`/search/keyword=${(inputState === \"\") ? keyword : inputState}/page`} \r\n      />\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default StartPage;","import React, { useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport HomePage from '../FetchDetails/HomePage.js';\r\nimport Head from '../LayoutDesign/Head.js';\r\nimport Body from '../LayoutDesign/BodyStartPage.js';\r\nimport NavHead from '../LayoutDesign/NavHead.js';\r\nimport { onGoingSeries, recentDUB } from '../../values.js';\r\nimport Pagination from '../FetchDetails/HomePagePagination.js';\r\n\r\nconst RecentDUB = () => {\r\n\r\n  let [ animeData, setAnimeData ] = useState([]);\r\n  let [ onGoingAnime, setOnGoing ] = useState([]);\r\n  let [ pagination, setPagination ] = useState([]);\r\n\r\n  let { page } = useParams();\r\n  //console.log(page);\r\n\r\n  const handlePage = () => {\r\n    return (page === undefined | page === null ) ? 1 : page;\r\n  }\r\n\r\n  useEffect(() => {\r\n    const anime = new HomePage(recentDUB, handlePage());\r\n    anime.loadAnime().then(data => setAnimeData(animeData = data));\r\n  }, [animeData.length]);\r\n\r\n  useEffect(() => {\r\n    const anime = new HomePage(onGoingSeries, 1);\r\n    anime.loadAnime().then(data => setOnGoing(data));\r\n  }, [onGoingAnime.length]);\r\n\r\n  useEffect(() => {\r\n    const pagination = new Pagination(recentDUB, handlePage());\r\n    pagination.loadPagination().then(data => {\r\n      setPagination(data);\r\n    });\r\n  }, [pagination.length]);\r\n\r\n  //console.log(animeData[0]);\r\n  //console.log(pagination);\r\n\r\n  return (\r\n    <div>\r\n      <Head />\r\n      <NavHead />\r\n      <Body data={animeData[0]} onGoingAnime={onGoingAnime[0]} pagination={pagination} paginationURL={'/page'} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default RecentDUB;","import React from 'react';\nimport { Route, BrowserRouter } from 'react-router-dom';\nimport StartPage from './components/Pages/StartPage.js';\nimport MoviesPage from './components/Pages/MoviesPage.js';\nimport NewSeason from './components/Pages/NewSeason.js';\nimport PopularPage from './components/Pages/PopularPage.js';\nimport DetailsPage from './components/Pages/DetailsPage.js';\nimport SearchPage from './components/Pages/SearchPage.js';\nimport RecentDUB from './components/Pages/RecentDUB';\n\nimport './App.css';\n\nfunction App() {\n  return (\n    <div>\n      <BrowserRouter basename={process.env.PUBLIC_URL}>\n        <Route path={[\"/\", \"/page=:page\"]}  exact render={(props) => <StartPage key={props.location.key} /> }  />\n        <Route path={[\"/movies\", \"/movies/page=:page\"]} exact render={(props) => <MoviesPage key={props.location.key} />} />\n        <Route path={[\"/new-season\", \"/new-season/page=:page\"]} exact render={(props) => <NewSeason key={props.location.key} />} />\n        <Route path={[\"/popular\", \"/popular/page=:page\"]} exact render={(props) => <PopularPage key={props.location.key} />} />\n        <Route path=\"/videos/:video\" exact render={(props) => <DetailsPage key={props.location.key} />} />\n        <Route path={[\"/recent-dub\", \"/recent-dub/page=:page\"]} exact render={(props) => <RecentDUB key={props.location.key} />} />\n        <Route path={[\"/search\", \"/search/keyword=:keyword/page=:page\"]} exact render={(props) => <SearchPage key={props.location.key} />}/>\n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\n\nconst theme = createMuiTheme({\n  palette: {\n    type: 'dark'\n  },\n  props: {\n    MuiButtonBase: {\n      disableRipple: true\n    }\n  }\n});\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme={theme}>\n      <CssBaseline />\n        <App />\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}